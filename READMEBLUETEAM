# **BlueTeam-Tools**

<p align="center">
<img src="https://user-images.githubusercontent.com/100603074/210680535-40d8c113-2336-4417-bdb4-4825a7477164.png" height="300">
</p>

Kho l∆∞u tr·ªØ Github n√†y ch·ª©a b·ªô s∆∞u t·∫≠p **65+** **c√¥ng c·ª•** v√† **t√†i nguy√™n** c√≥ th·ªÉ h·ªØu √≠ch cho c√°c **ho·∫°t ƒë·ªông blue teaming**.

M·ªôt s·ªë **c√¥ng c·ª•** c√≥ th·ªÉ ƒë∆∞·ª£c thi·∫øt k·∫ø ri√™ng cho **blue teaming**, trong khi nh·ªØng **c√¥ng c·ª•** kh√°c c√≥ t√≠nh ch·∫•t t·ªïng qu√°t h∆°n v√† c√≥ th·ªÉ ƒë∆∞·ª£c ƒëi·ªÅu ch·ªânh ƒë·ªÉ s·ª≠ d·ª•ng trong b·ªëi c·∫£nh **blue teaming**.

> üîó N·∫øu b·∫°n l√† **Red Teamer**, h√£y xem x√©t [**RedTeam-Tools**](https://github.com/A-poc/RedTeam-Tools)

> **C·∫£nh b√°o**
>
> *C√°c t√†i li·ªáu trong kho l∆∞u tr·ªØ n√†y ch·ªâ d√†nh cho m·ª•c ƒë√≠ch th√¥ng tin v√† gi√°o d·ª•c. Ch√∫ng kh√¥ng nh·∫±m m·ª•c ƒë√≠ch s·ª≠ d·ª•ng trong b·∫•t k·ª≥ ho·∫°t ƒë·ªông b·∫•t h·ª£p ph√°p n√†o.*

> **Ghi ch√∫**
>
> *·∫®n c√°c ti√™u ƒë·ªÅ c·ªßa **Danh s√°ch c√¥ng c·ª•** b·∫±ng m≈©i t√™n.*
>
> *Nh·∫•n üîô ƒë·ªÉ quay l·∫°i danh s√°ch.*

# **Danh s√°ch c√¥ng c·ª•**

<details open>
<summary><b>M·∫πo Blue Team</b> 4 m·∫πo</summary>
    <ul>
        <ul>
            <li><b><a href="#payload-extraction-with-process-hacker">Tr√≠ch xu·∫•t **payload** v·ªõi **Process Hacker**</a></b><i> @embee_research</i></li>
            <li><b><a href="#prevent-script-execution-via-double-click">NgƒÉn ch·∫∑n Th·ª±c thi Script th√¥ng qua Nh·∫•p ƒë√∫p</a></b><i> Thay ƒë·ªïi GPO ·ª®ng d·ª•ng M·∫∑c ƒë·ªãnh</i></li>
            <li><b><a href="#detect-cryptojacking-malware-with-proxy-logs">Ph√°t hi·ªán **Malware Cryptojacking** v·ªõi Nh·∫≠t k√Ω Proxy</a></b><i> Dave Mckay</i></li>
            <li><b><a href="#remove-null-bytes-in-cyberchef-malware-analysis">X√≥a byte null trong ph√¢n t√≠ch **malware** v·ªõi **CyberChef**</a></b><i> @Securityinbits</i></li>
        </ul>
    </ul>
</details>

<details open>
<summary><b>Kh√°m ph√° v√† √Ånh x·∫° M·∫°ng</b> 6 c√¥ng c·ª•</summary>
    <ul>
        <ul>
            <li><b><a href="#nmap">Nmap</a></b><i> M√°y qu√©t m·∫°ng</i></li>
            <li><b><a href="#nuclei">Nuclei</a></b><i> M√°y qu√©t l·ªó h·ªïng</i></li>
            <li><b><a href="#masscan">Masscan</a></b><i> M√°y qu√©t m·∫°ng nhanh</i></li>
            <li><b><a href="#angry-ip-scanner">Angry IP Scanner</a></b><i> M√°y qu√©t **IP/port**</i></li>
            <li><b><a href="#zmap">ZMap</a></b><i> M√°y qu√©t m·∫°ng l·ªõn</i></li>
            <li><b><a href="#shodan">Shodan</a></b><i> C√¥ng c·ª• t√¨m ki·∫øm t√†i s·∫£n h∆∞·ªõng Internet</i></li>
        </ul>
    </ul>
</details>

<details open>
<summary><b>Qu·∫£n l√Ω L·ªó h·ªïng</b> 4 c√¥ng c·ª•</summary>
    <ul>
        <ul>
            <li><b><a href="#openvas">OpenVAS</a></b><i> M√°y qu√©t l·ªó h·ªïng ngu·ªìn m·ªü</i></li>
            <li><b><a href="#nessus-essentials">Nessus Essentials</a></b><i> M√°y qu√©t l·ªó h·ªïng</i></li>
            <li><b><a href="#nexpose">Nexpose</a></b><i> C√¥ng c·ª• qu·∫£n l√Ω l·ªó h·ªïng</i></li>
            <li><b><a href="#hackerone">HackerOne</a></b><i> N·ªÅn t·∫£ng qu·∫£n l√Ω **Bug Bounty**</i></li>
        </ul>
    </ul>
</details>

<details open>
<summary><b>Gi√°m s√°t An ninh</b> 10 c√¥ng c·ª•</summary>
    <ul>
        <ul>
            <li><b><a href="#sysmon">Sysmon</a></b><i> **System Monitor** cho **Windows**</i></li>
            <li><b><a href="#kibana">Kibana</a></b><i> Tr·ª±c quan h√≥a v√† kh√°m ph√° d·ªØ li·ªáu</i></li>
            <li><b><a href="#logstash">Logstash</a></b><i> Thu th·∫≠p v√† x·ª≠ l√Ω d·ªØ li·ªáu</i></li>
            <li><b><a href="#parsedmarc">parsedmarc</a></b><i> Tr·ª±c quan h√≥a d·ªØ li·ªáu **DMARC Email**</i></li>
            <li><b><a href="#phishing-catcher">Phishing Catcher</a></b><i> C√¥ng c·ª• b·∫Øt **phishing** s·ª≠ d·ª•ng **Certstream**</i></li>
            <li><b><a href="#maltrail">maltrail</a></b><i> H·ªá th·ªëng ph√°t hi·ªán l∆∞u l∆∞·ª£ng ƒë·ªôc h·∫°i</i></li>
            <li><b><a href="#autorunstowineventlog">AutorunsToWinEventLog</a></b><i> C√¥ng c·ª• ph√¢n t√≠ch s·ª± ki·ªán Autoruns c·ªßa **Windows**</i></li>
            <li><b><a href="#procfilter">procfilter</a></b><i> **Framework** ch·∫∑n ti·∫øn tr√¨nh t√≠ch h·ª£p **YARA**</i></li>
            <li><b><a href="#velociraptor">velociraptor</a></b><i> C√¥ng c·ª• hi·ªÉn th·ªã v√† thu th·∫≠p d·ªØ li·ªáu ƒëi·ªÉm cu·ªëi</i></li>
            <li><b><a href="#sysmonsearch">SysmonSearch</a></b><i> Tr·ª±c quan h√≥a nh·∫≠t k√Ω s·ª± ki·ªán **Sysmon**</i></li>
        </ul>
    </ul>
</details>

<details open>
<summary><b>C√¥ng c·ª• v√† K·ªπ thu·∫≠t ƒêe d·ªça</b> 11 c√¥ng c·ª•</summary>
    <ul>
        <ul>
            <li><b><a href="#lolbas-projectgithubio">lolbas-project.github.io</a></b><i> **Binary** Windows "**Living Off The Land**"</i></li>
            <li><b><a href="#gtfobinsgithubio">gtfobins.github.io</a></b><i> **Binary** Linux "**Living Off The Land**"</i></li>
            <li><b><a href="#filesecio">filesec.io</a></b><i> Ph·∫ßn m·ªü r·ªông file c·ªßa k·∫ª t·∫•n c√¥ng</i></li>
            <li><b><a href="#kql-search">KQL Search</a></b><i> C√¥ng c·ª• t·ªïng h·ª£p truy v·∫•n **KQL**</i></li>
            <li><b><a href="#unprotect-project">Unprotect Project</a></b><i> C∆° s·ªü ki·∫øn th·ª©c k·ªπ thu·∫≠t n√© tr√°nh **malware**</i></li>
            <li><b><a href="#chainsaw">chainsaw</a></b><i> C√¥ng c·ª• t√¨m ki·∫øm Hi·ªán v·∫≠t Ph√°p y Windows nhanh</i></li>
            <li><b><a href="#freq">freq</a></b><i> Ph√°t hi·ªán **malware** b·∫±ng thu·∫≠t to√°n t·∫°o domain (**DGA**)</i></li>
            <li><b><a href="#yargen">yarGen</a></b><i> C√¥ng c·ª• t·∫°o lu·∫≠t **YARA**</i></li>
            <li><b><a href="#emailanalyzer">EmailAnalyzer</a></b><i> C√¥ng c·ª• ph√¢n t√≠ch email ƒë√°ng ng·ªù</i></li>
            <li><b><a href="#vcg">VCG</a></b><i> C√¥ng c·ª• qu√©t b·∫£o m·∫≠t m√£ ngu·ªìn</i></li>
            <li><b><a href="#cyberchef">CyberChef</a></b><i> N·ªÅn t·∫£ng thao t√°c d·ªØ li·ªáu tr·ª±c tuy·∫øn c·ªßa GCHQ</i></li>
        </ul>
    </ul>
</details>

<details open>
<summary><b>T√¨nh b√°o ƒêe d·ªça</b> 4 c√¥ng c·ª•</summary>
    <ul>
        <ul>
            <li><b><a href="#maltego">Maltego</a></b><i> N·ªÅn t·∫£ng T√¨nh b√°o ƒêe d·ªça</i></li>
            <li><b><a href="#misp">MISP</a></b><i> N·ªÅn t·∫£ng chia s·∫ª th√¥ng tin **Malware**</i></li>
            <li><b><a href="#threatconnect">ThreatConnect</a></b><i> T·ªïng h·ª£p d·ªØ li·ªáu ƒëe d·ªça</i></li>
            <li><b><a href="#adversary-emulation-library">Adversary Emulation Library</a></b><i> Th∆∞ vi·ªán k·∫ø ho·∫°ch m√¥ ph·ªèng k·∫ª th√π ngu·ªìn m·ªü</i></li>
        </ul>
    </ul>
</details>

<details open>
<summary><b>L·∫≠p k·∫ø ho·∫°ch ·ª®ng ph√≥ S·ª± c·ªë</b> 5 c√¥ng c·ª•</summary>
    <ul>
        <ul>
            <li><b><a href="#nist">NIST</a></b><i> **Cybersecurity Framework**</i></li>
            <li><b><a href="#incident-response-plan">K·∫ø ho·∫°ch ·ª®ng ph√≥ S·ª± c·ªë</a></b><i> **Framework** ·ª©ng ph√≥ s·ª± c·ªë</i></li>
            <li><b><a href="#ransomware-response-plan">K·∫ø ho·∫°ch ·ª®ng ph√≥ Ransomware</a></b><i> **Framework** ·ª©ng ph√≥ **ransomware**</i></li>
            <li><b><a href="#incident-response-reference-guide">H∆∞·ªõng d·∫´n Tham kh·∫£o ·ª®ng ph√≥ S·ª± c·ªë</a></b><i> T√†i li·ªáu h∆∞·ªõng d·∫´n chu·∫©n b·ªã s·ª± c·ªë</i></li>
            <li><b><a href="#awesome-incident-response">Awesome Incident Response</a></b><i> Danh s√°ch c√°c c√¥ng c·ª• ·ª©ng ph√≥ s·ª± c·ªë</i></li>
        </ul>
    </ul>
</details>

<details open>
<summary><b>Ph√°t hi·ªán v√† Ph√¢n t√≠ch Malware</b> 11 c√¥ng c·ª•</summary>
    <ul>
        <ul>
            <li><b><a href="#virustotal">VirusTotal</a></b><i> N·ªÅn t·∫£ng chia s·∫ª **IOC** ƒë·ªôc h·∫°i</i></li>
            <li><b><a href="#ida">IDA</a></b><i> Tr√¨nh d·ªãch ng∆∞·ª£c v√† g·ª° l·ªói **Malware**</i></li>
            <li><b><a href="#ghidra">Ghidra</a></b><i> C√¥ng c·ª• d·ªãch ng∆∞·ª£c ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i</i></li>
            <li><b><a href="#decode-vbe">decode-vbe</a></b><i> C√¥ng c·ª• gi·∫£i m√£ script **VBE** ƒë∆∞·ª£c m√£ h√≥a</i></li>
            <li><b><a href="#pafish">pafish</a></b><i> C√¥ng c·ª• ph√°t hi·ªán **sandbox m√°y ·∫£o**</i></li>
            <li><b><a href="#lookyloo">lookyloo</a></b><i> √Ånh x·∫° domain **phishing**</i></li>
            <li><b><a href="#yara">YARA</a></b><i> Nh·∫≠n d·∫°ng **Malware** th√¥ng qua kh·ªõp m·∫´u</i></li>
            <li><b><a href="#cuckoo-sandbox">Cuckoo Sandbox</a></b><i> **Sandbox** ph√¢n t√≠ch **Malware**</i></li>
            <li><b><a href="#radare2">Radare2</a></b><i> **Framework** d·ªãch ng∆∞·ª£c</i></li>
            <li><b><a href="#dnspy">dnSpy</a></b><i> C√¥ng c·ª• g·ª° l·ªói v√† ch·ªânh s·ª≠a **assembly .NET**</i></li>
            <li><b><a href="#malware-traffic-analysisnet">malware-traffic-analysis.net</a></b><i> M·∫´u **Malware** v√† packet capture</i></li>
        </ul>
    </ul>
</details>

<details open>
<summary><b>Ph·ª•c h·ªìi D·ªØ li·ªáu</b> 3 c√¥ng c·ª•</summary>
    <ul>
        <ul>
            <li><b><a href="#recuva">Recuva</a></b><i> Ph·ª•c h·ªìi t·ªáp</i></li>
            <li><b><a href="#extundelete">Extundelete</a></b><i> Ph·ª•c h·ªìi ph√¢n v√πng Ext3 ho·∫∑c Ext4</i></li>
            <li><b><a href="#testdisk">TestDisk</a></b><i> Ph·ª•c h·ªìi d·ªØ li·ªáu</i></li>
        </ul>
    </ul>
</details>

<details open>
<summary><b>Ph√°p y K·ªπ thu·∫≠t s·ªë</b> 3 c√¥ng c·ª•</summary>
    <ul>
        <ul>
            <li><b><a href="#sans-sift">SANS SIFT</a></b><i> B·ªô c√¥ng c·ª• ph√°p y</i></li>
            <li><b><a href="#the-sleuth-kit">The Sleuth Kit</a></b><i> C√¥ng c·ª• ph√¢n t√≠ch ·∫£nh ƒëƒ©a</i></li>
            <li><b><a href="#autopsy">Autopsy</a></b><i> N·ªÅn t·∫£ng ph√°p y k·ªπ thu·∫≠t s·ªë</i></li>
        </ul>
    </ul>
</details>

<details open>
<summary><b>ƒê√†o t·∫°o Nh·∫≠n th·ª©c An ninh</b> 4 c√¥ng c·ª•</summary>
    <ul>
        <ul>
            <li><b><a href="#tryhackme">TryHackMe</a></b><i> N·ªÅn t·∫£ng th·ª≠ th√°ch an ninh m·∫°ng</i></li>
            <li><b><a href="#hackthebox">HackTheBox</a></b><i> N·ªÅn t·∫£ng th·ª≠ th√°ch an ninh m·∫°ng</i></li>
            <li><b><a href="#cyberdefenders">CyberDefenders</a></b><i> N·ªÅn t·∫£ng th·ª≠ th√°ch an ninh m·∫°ng cho **Blue Team**</i></li>
            <li><b><a href="#phishme">PhishMe</a></b><i> ƒê√†o t·∫°o v·ªÅ **Phishing**</i></li>
        </ul>
    </ul>
</details>

<details open>
<summary><b>Giao ti·∫øp v√† C·ªông t√°c</b> 2 c√¥ng c·ª•</summary>
    <ul>
        <ul>
            <li><b><a href="#twitter">Twitter</a></b><i> C√°c t√†i kho·∫£n An ninh m·∫°ng</i></li>
            <li><b><a href="#facebook-theatexchange">Facebook TheatExchange</a></b><i> N·ªÅn t·∫£ng chia s·∫ª ch·ªâ b√°o ƒë·ªôc h·∫°i</i></li>
        </ul>
    </ul>
</details>

**M·∫πo Blue Team**
====================

*H·ªçc h·ªèi t·ª´ c√°c **Blue Teamer** v·ªõi b·ªô s∆∞u t·∫≠p M·∫πo **Blue Teaming**. Nh·ªØng m·∫πo n√†y bao g·ªìm nhi·ªÅu chi·∫øn thu·∫≠t, **c√¥ng c·ª•** v√† ph∆∞∆°ng ph√°p lu·∫≠n ƒë·ªÉ c·∫£i thi·ªán kh·∫£ nƒÉng **blue teaming** c·ªßa b·∫°n.*

### [üîô](#tool-list)Tr√≠ch xu·∫•t **payload** v·ªõi **Process Hacker**

![image](https://user-images.githubusercontent.com/100603074/217382117-acb26f85-d352-43b3-8818-6c5a0d90f350.png)

**M√¥ t·∫£:**
*'M·∫πo Ph√¢n t√≠ch **Malware** - S·ª≠ d·ª•ng **Process Hacker** ƒë·ªÉ theo d√µi c√°c **assembly .NET** ƒë√°ng ng·ªù trong c√°c ti·∫øn tr√¨nh m·ªõi ƒë∆∞·ª£c t·∫°o ra. K·∫øt h·ª£p v·ªõi **DnSpy**, c√≥ th·ªÉ ƒë·ªãnh v·ªã v√† tr√≠ch xu·∫•t c√°c **payload** ƒë·ªôc h·∫°i m√† kh√¥ng c·∫ßn ph·∫£i gi·∫£i m√£ th·ªß c√¥ng.'*

**ƒê√≥ng g√≥p:** [@embee_research](https://twitter.com/embee_research)

**Li√™n k·∫øt:** [Twitter](https://twitter.com/embee_research/status/1614871485931458560)

### [üîô](#tool-list)NgƒÉn ch·∫∑n Th·ª±c thi Script th√¥ng qua Nh·∫•p ƒë√∫p

![image](https://user-images.githubusercontent.com/100603074/218200763-53f9fc80-59e1-468a-93e2-69b84d1c7196.png)

**M√¥ t·∫£:**
*Tr√™n **Windows**, ph·ªï bi·∫øn khi th·∫•y c√°c t√°c nh√¢n ƒëe d·ªça ƒë·∫°t ƒë∆∞·ª£c th·ª±c thi ban ƒë·∫ßu th√¥ng qua c√°c t·ªáp script ƒë·ªôc h·∫°i gi·∫£ m·∫°o t·ªáp **Microsoft Office**. M·ªôt c√°ch hay ƒë·ªÉ ngƒÉn ch·∫∑n chu·ªói t·∫•n c√¥ng n√†y l√† thay ƒë·ªïi ·ª©ng d·ª•ng m·∫∑c ƒë·ªãnh li√™n k·∫øt v·ªõi c√°c t·ªáp n√†y (**HTA, JS, VBA, VBS**) th√†nh `notepad.exe`. B√¢y gi·ªù khi m·ªôt ng∆∞·ªùi d√πng b·ªã l·ª´a th√†nh c√¥ng nh·∫•p v√†o t·ªáp **HTA** tr√™n ƒëƒ©a, t·ªáp s·∫Ω m·ªü script trong notepad v√† m√£ ƒë·ªôc s·∫Ω kh√¥ng ƒë∆∞·ª£c th·ª±c thi.*

**ƒê√≥ng g√≥p:** [bluesoul](https://bluesoul.me/)

**Li√™n k·∫øt:** [Blog](https://bluesoul.me/2016/05/12/use-gpo-to-change-the-default-behavior-of-potentially-malicious-file-extensions/)

### [üîô](#tool-list)Ph√°t hi·ªán **Malware Cryptojacking** v·ªõi Nh·∫≠t k√Ω Proxy

**M√¥ t·∫£:** ***Malware cryptojacking** ng√†y c√†ng tr·ªü n√™n tinh vi h∆°n, v·ªõi ph·∫ßn m·ªÅm ƒë√†o ti·ªÅn ·∫£o s·ª≠ d·ª•ng k·ªπ thu·∫≠t **DLL sideloading** ƒë·ªÉ ·∫©n m√¨nh tr√™n m√°y v√† gi·∫£m t·∫£i **CPU** ƒë·ªÉ n·∫±m d∆∞·ªõi ng∆∞·ª°ng ph√°t hi·ªán. M·ªôt ƒëi·ªÉm chung m√† ch√∫ng ƒë·ªÅu c√≥ l√† ph·∫£i t·∫°o k·∫øt n·ªëi ƒë·∫øn c√°c mining pool, ƒë√¢y l√† n∆°i ch√∫ng ta c√≥ th·ªÉ t√¨m th·∫•y ch√∫ng. H√£y gi√°m s√°t nh·∫≠t k√Ω **proxy** v√† **DNS** c·ªßa b·∫°n ƒë·ªÉ t√¨m c√°c k·∫øt n·ªëi ch·ª©a c√°c chu·ªói mining pool ph·ªï bi·∫øn (v√≠ d·ª•: `*xmr.*` HO·∫∂C `*pool.com` HO·∫∂C `*pool.org` HO·∫∂C `pool.*`).*

**ƒê√≥ng g√≥p:** [Dave Mckay](https://www.howtogeek.com/author/davidmckay/)

**Li√™n k·∫øt:** [Blog](https://www.howtogeek.com/devops/how-to-detect-and-defeat-cryptominers-in-your-network/)

### [üîô](#tool-list)X√≥a byte null trong ph√¢n t√≠ch **malware** v·ªõi **CyberChef**

![image](https://user-images.githubusercontent.com/100603074/223865015-00128d71-0093-4422-b271-e26dac723013.png)

**M√¥ t·∫£:** *'Sau khi gi·∫£i m√£ **base64** cho chu·ªói **Unicode** trong qu√° tr√¨nh ph√¢n t√≠ch **malware**, b·∫°n c√≥ th·ªÉ g·∫∑p ph·∫£i c√°c byte null. Gi·ªØ m√£ ngu·ªìn c·ªßa b·∫°n d·ªÖ ƒë·ªçc b·∫±ng c√°ch s·ª≠ d·ª•ng thao t√°c "Remove null bytes" trong **CyberChef**.'*

**ƒê√≥ng g√≥p:** [Ayush Anand](https://twitter.com/Securityinbits)

**Li√™n k·∫øt:** [Twitter](https://twitter.com/securityinbits/status/1628364983661694976)

**Kh√°m ph√° v√† √Ånh x·∫° M·∫°ng**
====================

*C√°c c√¥ng c·ª• ƒë·ªÉ qu√©t v√† √°nh x·∫° m·∫°ng, kh√°m ph√° thi·∫øt b·ªã v√† d·ªãch v·ª•, v√† nh·∫≠n d·∫°ng c√°c l·ªó h·ªïng ti·ªÅm ·∫©n.*

### [üîô](#tool-list)[**Nmap**](https://nmap.org)

**Nmap** (vi·∫øt t·∫Øt c·ªßa Network Mapper) l√† m·ªôt **c√¥ng c·ª•** qu√©t m·∫°ng mi·ªÖn ph√≠ v√† m√£ ngu·ªìn m·ªü ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ kh√°m ph√° c√°c host v√† d·ªãch v·ª• tr√™n m·∫°ng m√°y t√≠nh, v√† thƒÉm d√≤ th√¥ng tin v·ªÅ c√°c ƒë·∫∑c ƒëi·ªÉm c·ªßa ch√∫ng.

N√≥ c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ x√°c ƒë·ªãnh c·ªïng n√†o tr√™n m·∫°ng ƒëang m·ªü v√† d·ªãch v·ª• n√†o ƒëang ch·∫°y tr√™n c√°c c·ªïng ƒë√≥. Bao g·ªìm kh·∫£ nƒÉng nh·∫≠n d·∫°ng c√°c l·ªó h·ªïng b·∫£o m·∫≠t tr√™n m·∫°ng.

**C√†i ƒë·∫∑t:**

You can download the latest release from [t·∫°i ƒë√¢y](https://nmap.org/download).
**L∆∞u √Ω:** **Nmap** l√† c√¥ng c·ª• r·∫•t ph·ªï bi·∫øn v√† c√≥ tr√¨nh c√†i ƒë·∫∑t cho h·∫ßu h·∫øt c√°c h·ªá ƒëi·ªÅu h√†nh.

**C√°ch s·ª≠ d·ª•ng:**

```bash
# Qu√©t m·ªôt IP ƒë∆°n
nmap 192.168.1.1

# Qu√©t m·ªôt d·∫£i ƒë·ªãa ch·ªâ
nmap 192.168.1.1-254

# Qu√©t m·ª•c ti√™u t·ª´ m·ªôt t·ªáp
nmap -iL targets.txt

# Qu√©t c·ªïng 21
nmap 192.168.1.1 -p 21

# B·∫≠t ph√°t hi·ªán HƒêH, ph√°t hi·ªán phi√™n b·∫£n d·ªãch v·ª•, qu√©t script v√† traceroute
nmap 192.168.1.1 -A
```
**L∆∞u √Ω:** ƒê√¢y l√† c√°c v√≠ d·ª• c∆° b·∫£n v·ªÅ c√°ch s·ª≠ d·ª•ng `nmap` cho c√°c t√°c v·ª• qu√©t m·∫°ng. C√°c k·∫øt qu·∫£ qu√©t c√≥ th·ªÉ ƒë∆∞·ª£c Blue Team s·ª≠ d·ª•ng ƒë·ªÉ ki·ªÉm tra c√°c d·ªãch v·ª• kh√¥ng mong mu·ªën ƒëang ch·∫°y, c√°c c·ªïng m·ªü l·ªô ra ngo√†i kh√¥ng c·∫ßn thi·∫øt, v√† th√¥ng tin phi√™n b·∫£n d·ªãch v·ª• c√≥ th·ªÉ ch·ªâ ra c√°c l·ªó h·ªïng ƒë√£ bi·∫øt.

Nice usage [cheat sheet](https://www.stationx.net/nmap-cheat-sheet/).

![image](https://user-images.githubusercontent.com/100603074/210288428-01875d96-72e6-4857-b18d-4e10d80863ad.png)

*Image used from https://kirelos.com/nmap-version-scan-determining-the-version-and-available-services/*

### [üîô](#tool-list)[**Nuclei**](https://nuclei.projectdiscovery.io/nuclei/get-started/)

A specialized tool designed to automate the process of detecting vulnerabilities in web applications, networks, and infrastructure.

**Nuclei** uses pre-defined templates to probe a target and identify potential vulnerabilities. It can be used to test a single host or a range of hosts, and can be configured to run a variety of tests to check for different types of vulnerabilities.

**Install:**

```bash
git clone https://github.com/projectdiscovery/nuclei.git; \
cd nuclei/v2/cmd/nuclei; \
go build; \
mv nuclei /usr/local/bin/; \
nuclei -version;
```
**L∆∞u √Ω:** H∆∞·ªõng d·∫´n c√†i ƒë·∫∑t **Nuclei** b·∫±ng c√°ch clone m√£ ngu·ªìn Golang, build v√† di chuy·ªÉn file th·ª±c thi v√†o th∆∞ m·ª•c bin c·ªßa h·ªá th·ªëng.

**C√°ch s·ª≠ d·ª•ng:**

```bash
# T·∫•t c·∫£ c√°c template ƒë∆∞·ª£c th·ª±c thi t·ª´ ƒë∆∞·ªùng d·∫´n c√†i ƒë·∫∑t template m·∫∑c ƒë·ªãnh.
nuclei -u https://example.com

# Th∆∞ m·ª•c template t√πy ch·ªânh ho·∫∑c nhi·ªÅu th∆∞ m·ª•c template
nuclei -u https://example.com -t cves/ -t exposures/

# Templates c√≥ th·ªÉ ƒë∆∞·ª£c th·ª±c thi tr√™n danh s√°ch URL
nuclei -list http_urls.txt

# Lo·∫°i tr·ª´ m·ªôt template ƒë∆°n l·∫ª
nuclei -list urls.txt -t cves/ -exclude-templates cves/2020/CVE-2020-XXXX.yaml
```
**L∆∞u √Ω:** S·ª≠ d·ª•ng **Nuclei** t·ª´ g√≥c ƒë·ªô Blue Team r·∫•t quan tr·ªçng ƒë·ªÉ t·ª± ki·ªÉm tra h·∫° t·∫ßng c·ªßa m√¨nh. B·∫°n c√≥ th·ªÉ ch·∫°y c√°c template c√¥ng khai ho·∫∑c t·ª± t·∫°o/ch·ªânh s·ª≠a ƒë·ªÉ t√¨m c√°c l·ªó h·ªïng m√† attacker c√≥ th·ªÉ khai th√°c. T√≠ch h·ª£p v√†o quy tr√¨nh ki·ªÉm tra ƒë·ªãnh k·ª≥ gi√∫p ƒë·∫£m b·∫£o an to√†n li√™n t·ª•c.

Full usage information can be found [t·∫°i ƒë√¢y](https://nuclei.projectdiscovery.io/nuclei/get-started/#running-nuclei).

![image](https://user-images.githubusercontent.com/100603074/210288448-c2d9da7d-e68f-4d06-9066-b702ce4b5cb3.png)

*Image used from https://www.appsecsanta.com/nuclei*

### [üîô](#tool-list)[**Masscan**]()

A port scanner that is similar to **nmap**, but is much faster and can scan a large number of ports in a short amount of time.

**Masscan** uses a novel technique called "**SYN scan**" to scan networks, which allows it to scan a large number of ports very quickly.

**Install (Apt):**

```bash
sudo apt install masscan
```
**L∆∞u √Ω:** C√†i ƒë·∫∑t ti√™u chu·∫©n tr√™n c√°c h·ªá th·ªëng Linux d·ª±a tr√™n Debian/Ubuntu.

**Install (Git):**

```bash
sudo apt-get install clang git gcc make libpcap-dev
git clone https://github.com/robertdavidgraham/masscan
cd masscan
make
```
**L∆∞u √Ω:** Bi√™n d·ªãch Masscan t·ª´ m√£ ngu·ªìn b·∫±ng Git v√† Make. C·∫ßn c√°c th∆∞ vi·ªán ph√°t tri·ªÉn (`libpcap-dev`).

**C√°ch s·ª≠ d·ª•ng:**

```bash
# Qu√©t c√°c c·ªïng 22, 80, 445 (-p22,80,445) tr√™n subnet 192.168.1.0/24
masscan -p22,80,445 192.168.1.0/24

# Qu√©t subnet l·ªõp B cho c√°c c·ªïng 22 ƒë·∫øn 25
masscan 10.11.0.0/16 -p22-25

# Qu√©t subnet l·ªõp B cho top 100 c·ªïng v·ªõi t·ªëc ƒë·ªô 100.000 g√≥i tin m·ªói gi√¢y
masscan 10.11.0.0/16 ‚Äê‚Äêtop-ports 100 ‚Äì‚Äìrate 100000

# Qu√©t subnet l·ªõp B, nh∆∞ng b·ªè qua c√°c d·∫£i ƒë·ªãa ch·ªâ trong exclude.txt
masscan 10.11.0.0/16 ‚Äê‚Äêtop-ports 100 ‚Äê‚Äêexcludefile exclude.txt
```
**L∆∞u √Ω:** Masscan c·ª±c nhanh, c√≥ th·ªÉ qu√©t to√†n b·ªô Internet trong th·ªùi gian ng·∫Øn. Blue Team c√≥ th·ªÉ d√πng n√≥ ƒë·ªÉ qu√©t c√°c d·∫£i IP l·ªõn c·ªßa t·ªï ch·ª©c m√¨nh ho·∫∑c c√°c m·ª•c ti√™u b√™n ngo√†i li√™n quan, ph√°t hi·ªán nhanh c√°c c·ªïng ƒëang m·ªü m√† c√°c c√¥ng c·ª• ch·∫≠m h∆°n c√≥ th·ªÉ b·ªè s√≥t ho·∫∑c m·∫•t qu√° nhi·ªÅu th·ªùi gian. C·∫©n tr·ªçng khi s·ª≠ d·ª•ng `--rate` qu√° cao v√¨ c√≥ th·ªÉ g√¢y ·∫£nh h∆∞·ªüng ƒë·∫øn m·∫°ng.

![image](https://user-images.githubusercontent.com/100603074/210288465-fa4d7b45-d7ff-4c5e-82a6-e0d480b387c7.png)

*Image used from https://kalilinuxtutorials.com/masscan/*

### [üîô](#tool-list)[**Angry IP Scanner**](https://angryip.org/)

A free and open-source tool for scanning IP addresses and ports.

It's a cross-platform tool, designed to be fast and easy to use, and can scan an entire network or a range of IP addresses to find live hosts.

**Angry IP Scanner** can also detect the hostname and MAC address of a device, and can be used to perform basic **ping sweeps** and port scans.

**Install:**

You can download the latest release from [t·∫°i ƒë√¢y](https://angryip.org/download/).
**L∆∞u √Ω:** C√≥ phi√™n b·∫£n c√†i ƒë·∫∑t cho Windows, macOS v√† Linux. ƒê√¢y l√† c√¥ng c·ª• qu√©t IP/Port c∆° b·∫£n, d·ªÖ s·ª≠ d·ª•ng.

**C√°ch s·ª≠ d·ª•ng:**

**Angry IP Scanner** can be used via the GUI.
**L∆∞u √Ω:** Ch·ªß y·∫øu s·ª≠ d·ª•ng qua giao di·ªán ƒë·ªì h·ªça.

Full usage information and documentation can be found [t·∫°i ƒë√¢y](https://angryip.org/documentation/).

![image](https://user-images.githubusercontent.com/100603074/210288485-711924ca-504e-4655-9e91-a0ecf32b2e63.png)

*Image used from https://angryip.org/screenshots/*

### [üîô](#tool-list)[**ZMap**](https://github.com/zmap/zmap)

**ZMap** is a network scanner designed to perform comprehensive scans of the IPv4 address space or large portions of it.

On a typical desktop computer with a gigabit Ethernet connection, **ZMap** is capable scanning the entire public IPv4 address space in under 45 minutes.
**L∆∞u √Ω:** T∆∞∆°ng t·ª± Masscan v·ªÅ t·ªëc ƒë·ªô v√† kh·∫£ nƒÉng qu√©t ph·∫°m vi r·ªông, th∆∞·ªùng ƒë∆∞·ª£c d√πng ƒë·ªÉ kh·∫£o s√°t c√°c d·ªãch v·ª• c·ª• th·ªÉ tr√™n c√°c d·∫£i IP c√¥ng c·ªông ho·∫∑c m·∫°ng n·ªôi b·ªô l·ªõn.

**Install:**

You can download the latest release from [t·∫°i ƒë√¢y](https://github.com/zmap/zmap/releases).

**Usage:**

```bash
# Qu√©t ch·ªâ 10.0.0.0/8 v√† 192.168.0.0/16 tr√™n TCP/80
zmap -p 80 10.0.0.0/8 192.168.0.0/16
```
**L∆∞u √Ω:** `-p 80` ch·ªâ qu√©t c·ªïng TCP 80. Sau ƒë√≥ li·ªát k√™ c√°c d·∫£i IP ho·∫∑c subnet c·∫ßn qu√©t.

Full usage information can be found [t·∫°i ƒë√¢y](https://github.com/zmap/zmap/wiki).

![image](https://user-images.githubusercontent.com/100603074/210288512-fe050de5-fe7a-4c90-aab3-f307146f2b20.png)

*Image used from https://www.hackers-arise.com/post/zmap-for-scanning-the-internet-scan-the-entire-internet-in-45-minutes*

### [üîô](#tool-list)[**Shodan**]()

**Shodan** is a search engine for internet-connected devices.

It crawls the internet for assets, allowing users to search for specific devices and view information about them.

This information can include the device's IP address, the software and version it is running, and the type of device it is.

**Install:**

The search engine can be accessed at [https://www.shodan.io/dashboard](https://www.shodan.io/dashboard).
**L∆∞u √Ω:** Shodan l√† m·ªôt d·ªãch v·ª• tr·ª±c tuy·∫øn, kh√¥ng c·∫ßn c√†i ƒë·∫∑t tool c·ª•c b·ªô (m·∫∑c d√π c√≥ API v√† client CLI).

**Usage:**

[Nguy√™n t·∫Øc truy v·∫•n Shodan](https://help.shodan.io/the-basics/search-query-fundamentals)

[V√≠ d·ª• truy v·∫•n Shodan](https://www.shodan.io/search/examples)

[Cheat sheet truy v·∫•n hay](https://www.osintme.com/index.php/2021/01/16/ultimate-osint-with-shodan-100-great-shodan-queries/)

![image](https://user-images.githubusercontent.com/100603074/191689282-70f99fe9-aa08-4cd3-b881-764eface8546.png)

*Image used from https://www.shodan.io/*

**Qu·∫£n l√Ω L·ªó h·ªïng**
====================

*C√°c c√¥ng c·ª• ƒë·ªÉ nh·∫≠n d·∫°ng, ∆∞u ti√™n v√† gi·∫£m thi·ªÉu l·ªó h·ªïng trong m·∫°ng v√† tr√™n t·ª´ng thi·∫øt b·ªã.*

### [üîô](#tool-list)[**OpenVAS**](https://openvas.org/)

**OpenVAS** is an open-source vulnerability scanner that helps identify security vulnerabilities in software and networks.

It is a tool that can be used to perform network security assessments and is often used to identify vulnerabilities in systems and applications so that they can be patched or mitigated.

**OpenVAS** is developed by the Greenbone Networks company and is available as a free and open-source software application.
**L∆∞u √Ω:** OpenVAS l√† m·ªôt gi·∫£i ph√°p qu√©t l·ªó h·ªïng m·∫°nh m·∫Ω v√† mi·ªÖn ph√≠, l√† m·ªôt ph·∫ßn c·ªßa Greenbone Security Assistant.

**Install (Kali):**

```bash
apt-get update
apt-get dist-upgrade
apt-get install openvas
openvas-setup
```
**L∆∞u √Ω:** C√°c l·ªánh c√†i ƒë·∫∑t v√† thi·∫øt l·∫≠p **OpenVAS** tr√™n **Kali Linux**. L·ªánh `openvas-setup` s·∫Ω th·ª±c hi·ªán c√°c b∆∞·ªõc c·∫•u h√¨nh ban ƒë·∫ßu, t·∫£i c√°c feed l·ªó h·ªïng v√† t·∫°o ng∆∞·ªùi d√πng admin.

**Usage:**

```bash
openvas-start
```
**L∆∞u √Ω:** L·ªánh kh·ªüi ƒë·ªông c√°c d·ªãch v·ª• c·ªßa **OpenVAS**.

Visit https://127.0.0.1:9392, accept the SSL certificate popup and login with admin credentials:

- username:admin
- password:(*M·∫≠t kh·∫©u trong output l·ªánh openvas-setup*)
**L∆∞u √Ω:** Sau khi kh·ªüi ƒë·ªông, b·∫°n truy c·∫≠p giao di·ªán web c·ªßa OpenVAS qua tr√¨nh duy·ªát v√† ƒëƒÉng nh·∫≠p b·∫±ng t√†i kho·∫£n admin ƒë√£ t·∫°o trong qu√° tr√¨nh setup.

![image](https://user-images.githubusercontent.com/100603074/210452918-aa8d7be0-e557-4556-937c-334df02702dc.png)

*Image used from https://www.kali.org/blog/openvas-vulnerability-scanning/*

### [üîô](#tool-list)[**Nessus Essentials**](https://www.tenable.com/products/nessus/nessus-essentials)

**Nessus** is a vulnerability scanner that helps identify and assess the vulnerabilities that exist within a network or computer system.

It is a tool that is used to perform security assessments and can be used to identify vulnerabilities in systems and applications so that they can be patched or mitigated.

**Nessus** is developed by Tenable, Inc. and is available in both free and paid versions:

- The free version, called **Nessus Essentials**, is available for personal use only and is limited in its capabilities compared to the paid version.
- The paid version, called **Nessus Professional**, is more fully featured and is intended for use in a professional setting.
**L∆∞u √Ω:** Nessus l√† m·ªôt trong nh·ªØng m√°y qu√©t l·ªó h·ªïng ph·ªï bi·∫øn v√† ƒë∆∞·ª£c c√¥ng nh·∫≠n nh·∫•t trong ng√†nh, do Tenable ph√°t tri·ªÉn.

**Install:**

Register for a **Nessus Essentials** activation code [t·∫°i ƒë√¢y](https://www.tenable.com/products/nessus/nessus-essentials) and download.

Purchase **Nessus Professional** from [t·∫°i ƒë√¢y](https://www.tenable.com/products/nessus/nessus-professional).

**Usage:**

Extensive documentation can be found [t·∫°i ƒë√¢y](https://docs.tenable.com/nessus/Content/GetStarted.htm).

[T√¨m ki·∫øm **Plugin Nessus**](https://www.tenable.com/plugins/search)

[C·ªông ƒë·ªìng Tenable](https://community.tenable.com/)

![image](https://user-images.githubusercontent.com/100603074/210452954-6208f96a-d180-4c8d-9579-313613d2cbe2.png)

*Image used from https://www.tenable.com*

### [üîô](#tool-list)[**Nexpose**](https://www.rapid7.com/products/nexpose/)

**Nexpose** is a vulnerability management tool developed by Rapid7. It is designed to help organizations identify and assess vulnerabilities in their systems and applications in order to mitigate risk and improve security.

**Nexpose** can be used to scan networks, devices, and applications in order to identify vulnerabilities and provide recommendations for remediation.

It also offers features such as asset discovery, risk prioritization, and integration with other tools in the Rapid7 vulnerability management platform.
**L∆∞u √Ω:** Nexpose l√† m·ªôt gi·∫£i ph√°p qu·∫£n l√Ω l·ªó h·ªïng c·ªßa Rapid7, th∆∞·ªùng ƒë∆∞·ª£c d√πng trong c√°c m√¥i tr∆∞·ªùng doanh nghi·ªáp l·ªõn h∆°n, cung c·∫•p t√≠nh nƒÉng ph√°t hi·ªán t√†i s·∫£n, ∆∞u ti√™n r·ªßi ro v√† t√≠ch h·ª£p v·ªõi c√°c tool kh√°c.

**Install:**

For detailed installation instructions see [t·∫°i ƒë√¢y](https://docs.rapid7.com/nexpose/install/).

**Usage:**

For full login information see [t·∫°i ƒë√¢y](https://docs.rapid7.com/nexpose/log-in-and-activate).

For usage and scan creation instructions see [t·∫°i ƒë√¢y](https://docs.rapid7.com/nexpose/create-and-scan-a-site).

![image](https://user-images.githubusercontent.com/100603074/210452992-cf9976ee-6b93-465d-bc1c-6e23cc387dba.png)

*Image used from https://www.rapid7.com/products/nexpose/*

### [üîô](#tool-list)[**HackerOne**](https://www.hackerone.com/)

**HackerOne** is a **bug bounty management company** that can be used to create and manage bug bounty programs for your business.

Bug bounty programs are a great way to outsource external vulnerability assessments, with the platform offering both private and public programs with the ability set program scopes and rules of engagement.

**HackerOne** also offer initial triage and management of external bug reports from researchers, with the ability to compensate researchers directly through the platform.
**L∆∞u √Ω:** S·ª≠ d·ª•ng c√°c n·ªÅn t·∫£ng bug bounty nh∆∞ HackerOne gi√∫p Blue Team t·∫≠n d·ª•ng s·ª©c m·∫°nh c·ªông ƒë·ªìng ethical hacker ƒë·ªÉ t√¨m ra c√°c l·ªó h·ªïng b·∫£o m·∫≠t tr√™n h·∫° t·∫ßng c√¥ng c·ªông c·ªßa m√¨nh m√† c√≥ th·ªÉ b·ªã b·ªè s√≥t trong c√°c b√†i ki·ªÉm tra pen test th√¥ng th∆∞·ªùng.

![image](https://user-images.githubusercontent.com/100603074/217382232-b8df098a-c74b-4552-b344-f5228c84c383.png)

*Image used from https://www.hackerone.com/product/bug-bounty-platform*

**Gi√°m s√°t An ninh**
====================

*C√°c c√¥ng c·ª• ƒë·ªÉ thu th·∫≠p v√† ph√¢n t√≠ch nh·∫≠t k√Ω b·∫£o m·∫≠t v√† c√°c ngu·ªìn d·ªØ li·ªáu kh√°c nh·∫±m nh·∫≠n d·∫°ng c√°c m·ªëi ƒëe d·ªça ti·ªÅm ·∫©n v√† ho·∫°t ƒë·ªông b·∫•t th∆∞·ªùng.*

### [üîô](#tool-list)[**Sysmon**](https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon)

**Sysmon** is a **Windows system monitor** that tracks system activity and logs it to the **Windows event log**.

It provides detailed information about system activity, including process creation and termination, network connections, and changes to file creation time.

**Sysmon** can be configured to monitor specific events or processes and can be used to alert administrators of suspicious activity on a system.
**L∆∞u √Ω:** Sysmon l√† m·ªôt c√¥ng c·ª• c·ª±c k·ª≥ gi√° tr·ªã cho Blue Team tr√™n h·ªá th·ªëng Windows. N√≥ cung c·∫•p logging ·ªü m·ª©c ƒë·ªô h·∫°t (granular logging) v·ªÅ ho·∫°t ƒë·ªông c·ªßa ti·∫øn tr√¨nh, k·∫øt n·ªëi m·∫°ng, t∆∞∆°ng t√°c v·ªõi registry v√† filesystem, cho ph√©p threat hunting v√† ph√°t hi·ªán c√°c TTP ti√™n ti·∫øn h∆°n. C·∫ßn m·ªôt c·∫•u h√¨nh t·ªët (nh∆∞ Sysmon config c·ªßa SwiftOnSecurity) ƒë·ªÉ Sysmon hi·ªáu qu·∫£ v√† tr√°nh t·∫°o ra qu√° nhi·ªÅu log.

**Install:**

Download the sysmon binary from [t·∫°i ƒë√¢y](https://download.sysinternals.com/files/Sysmon.zip).

**C√°ch s·ª≠ d·ª•ng:**

```bash
# C√†i ƒë·∫∑t v·ªõi c√†i ƒë·∫∑t m·∫∑c ƒë·ªãnh (image ti·∫øn tr√¨nh ƒë∆∞·ª£c hash v·ªõi SHA1 v√† kh√¥ng gi√°m s√°t m·∫°ng)
sysmon -accepteula -i

# C√†i ƒë·∫∑t Sysmon v·ªõi t·ªáp c·∫•u h√¨nh (nh∆∞ m√¥ t·∫£ d∆∞·ªõi ƒë√¢y)
sysmon -accepteula -i c:\windows\config.xml

# G·ª° c√†i ƒë·∫∑t
sysmon -u

# Dump c·∫•u h√¨nh hi·ªán t·∫°i
sysmon -c
```
**L∆∞u √Ω:** C√†i ƒë·∫∑t Sysmon tr√™n h·ªá th·ªëng Windows b·∫±ng c√°c tham s·ªë d√≤ng l·ªánh. `-i` ƒë·ªÉ c√†i ƒë·∫∑t, `-u` ƒë·ªÉ g·ª° c√†i ƒë·∫∑t, `-c` ƒë·ªÉ xem c·∫•u h√¨nh hi·ªán t·∫°i. Vi·ªác s·ª≠ d·ª•ng `-i` v·ªõi m·ªôt t·ªáp `.xml` (v√≠ d·ª• `config.xml`) l√† c√°ch ph·ªï bi·∫øn nh·∫•t ƒë·ªÉ tri·ªÉn khai Sysmon v·ªõi c√°c b·ªô l·ªçc event v√† hashing file ƒë∆∞·ª£c c·∫•u h√¨nh tr∆∞·ªõc.

Full event filtering information can be found [t·∫°i ƒë√¢y](https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon#event-filtering-entries).

The Microsoft documentation page can be found [t·∫°i ƒë√¢y](https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon).

![image](https://user-images.githubusercontent.com/100603074/210621009-b3c31c2b-f789-450a-acbf-7578fa943abd.png)

*Image used from https://nsaneforums.com/topic/281207-sysmon-5-brings-registry-modification-logging/*

### [üîô](#tool-list)[**Kibana**](https://www.elastic.co/kibana/)

**Kibana** is an open-source data visualization and exploration tool that is often used for log analysis in combination with **Elasticsearch**.

**Kibana** provides a user-friendly interface for searching, visualizing, and analyzing log data, which can be helpful for identifying patterns and trends that may indicate a security threat.

**Kibana** can be used to analyze a wide range of data sources, including system logs, network logs, and application logs. It can also be used to create custom dashboards and alerts to help security teams stay informed about potential threats and respond quickly to incidents.
**L∆∞u √Ω:** Kibana l√† giao di·ªán ng∆∞·ªùi d√πng cho Elastic Stack (tr∆∞·ªõc ƒë√¢y l√† ELK). Blue Team s·ª≠ d·ª•ng n√≥ ƒë·ªÉ tr·ª±c quan h√≥a (dashboards, bi·ªÉu ƒë·ªì) v√† t√¨m ki·∫øm (queries) m·ªôt l∆∞·ª£ng l·ªõn log t·∫≠p trung (th∆∞·ªùng ƒë∆∞·ª£c thu th·∫≠p b·ªüi Logstash v√† l∆∞u tr·ªØ trong Elasticsearch). R·∫•t h·ªØu √≠ch cho vi·ªác gi√°m s√°t, ph√¢n t√≠ch h√†nh vi b·∫•t th∆∞·ªùng v√† threat hunting.

**Install:**

You can download **Kibana** from [t·∫°i ƒë√¢y](https://www.elastic.co/downloads/kibana).

Installation instructions can be found [t·∫°i ƒë√¢y](https://www.elastic.co/guide/en/kibana/current/install.html).

**C√°ch s·ª≠ d·ª•ng (Tr·ª±c quan h√≥a v√† kh√°m ph√° d·ªØ li·ªáu log):**

**Kibana** cung c·∫•p m·ªôt lo·∫°t c√°c c√¥ng c·ª• tr·ª±c quan h√≥a c√≥ th·ªÉ gi√∫p b·∫°n nh·∫≠n d·∫°ng c√°c m·∫´u v√† xu h∆∞·ªõng trong d·ªØ li·ªáu log c·ªßa m√¨nh. B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng c√°c c√¥ng c·ª• n√†y ƒë·ªÉ t·∫°o dashboard t√πy ch·ªânh hi·ªÉn th·ªã c√°c ch·ªâ s·ªë v√† c·∫£nh b√°o li√™n quan.

**C√°ch s·ª≠ d·ª•ng (C·∫£nh b√°o ƒêe d·ªça):**

**Kibana** c√≥ th·ªÉ ƒë∆∞·ª£c c·∫•u h√¨nh ƒë·ªÉ g·ª≠i c·∫£nh b√°o khi ph√°t hi·ªán c√°c m·∫´u ho·∫∑c b·∫•t th∆∞·ªùng trong d·ªØ li·ªáu log c·ªßa b·∫°n. B·∫°n c√≥ th·ªÉ thi·∫øt l·∫≠p c·∫£nh b√°o ƒë·ªÉ th√¥ng b√°o v·ªÅ c√°c m·ªëi ƒëe d·ªça b·∫£o m·∫≠t ti·ªÅm ·∫©n, ch·∫≥ng h·∫°n nh∆∞ c√°c l·∫ßn ƒëƒÉng nh·∫≠p th·∫•t b·∫°i ho·∫∑c k·∫øt n·ªëi m·∫°ng t·ªõi c√°c ƒë·ªãa ch·ªâ IP ƒë·ªôc h·∫°i ƒë√£ bi·∫øt.

Nice [blog](https://phoenixnap.com/kb/kibana-tutorial) about querying and visualizing data in **Kibana**.

![image](https://user-images.githubusercontent.com/100603074/210621061-badf3acf-2680-42c5-bbd9-43bca7a85cf2.png)

*Image used from https://www.pinterest.co.uk/pin/analysing-honeypot-data-using-kibana-and-elasticsearch--684758318328369269/*

### [üîô](#tool-list)[**Logstash**](https://www.elastic.co/logstash/)

**Logstash** is a open-source data collection engine with real-time pipelining capabilities. It is a server-side data processing pipeline that ingests data from a multitude of sources simultaneously, transforms it, and then sends it to a "stash" like **Elasticsearch**.

**Logstash** has a rich set of plugins, which allows it to connect to a variety of sources and process the data in multiple ways. It can parse and transform logs, translate data into a structured format, or send it to another tool for further processing.

With its ability to process large volumes of data quickly, **Logstash** is an integral part of the **ELK stack (Elasticsearch, Logstash, and Kibana)** and is often used to centralize, transform, and monitor log data.
**L∆∞u √Ω:** Logstash l√† th√†nh ph·∫ßn x·ª≠ l√Ω trong Elastic Stack. N√≥ ƒë√≥ng vai tr√≤ l√† c·∫ßu n·ªëi gi·ªØa c√°c ngu·ªìn log ƒëa d·∫°ng (syslog, filebeat, agent, ...) v√† Elasticsearch. Blue Team c·∫•u h√¨nh Logstash ƒë·ªÉ thu th·∫≠p, ph√¢n t√≠ch c√∫ ph√°p (parse), l√†m s·∫°ch v√† chu·∫©n h√≥a d·ªØ li·ªáu log tr∆∞·ªõc khi l∆∞u tr·ªØ ƒë·ªÉ t√¨m ki·∫øm v√† ph√¢n t√≠ch d·ªÖ d√†ng h∆°n.

**Install:**

Download logstash from [t·∫°i ƒë√¢y](https://www.elastic.co/downloads/logstash).

**Usage:**

Full logstash documentation [t·∫°i ƒë√¢y](https://www.elastic.co/guide/en/logstash/current/introduction.html).

Configuration examples [t·∫°i ƒë√¢y](https://www.elastic.co/guide/en/logstash/current/config-examples.html).

![image](https://user-images.githubusercontent.com/100603074/210621111-e7630493-bc1c-41fa-af98-0261fbf6e293.png)

*Image used from https://www.elastic.co/guide/en/logstash/current/logstash-modules.html*

### [üîô](#tool-list)[**parsedmarc**](https://github.com/domainaware/parsedmarc)

A Python module and CLI utility for parsing DMARC reports.

When used with **Elasticsearch** and **Kibana** (or Splunk), it works as a self-hosted open source alternative to commercial DMARC report processing services such as Agari Brand Protection, Dmarcian, OnDMARC, ProofPoint Email Fraud Defense, and Valimail.
**L∆∞u √Ω:** DMARC l√† m·ªôt ti√™u chu·∫©n x√°c th·ª±c email gi√∫p ng∆∞·ªùi nh·∫≠n ki·ªÉm tra t√≠nh h·ª£p l·ªá c·ªßa email ƒë·∫øn, ngƒÉn ch·∫∑n gi·∫£ m·∫°o ngu·ªìn g·ª≠i. DMARC cho ph√©p ch·ªß s·ªü h·ªØu domain nh·∫≠n b√°o c√°o v·ªÅ c√°c email g·ª≠i ƒëi s·ª≠ d·ª•ng domain c·ªßa h·ªç. **parsedmarc** gi√∫p x·ª≠ l√Ω c√°c b√°o c√°o DMARC n√†y ƒë·ªÉ ph√°t hi·ªán c√°c email gi·∫£ m·∫°o.

Features:

- Parses draft and 1.0 standard aggregate/rua reports
- Parses forensic/failure/ruf reports
- Can parse reports from an inbox over IMAP, Microsoft Graph, or Gmail API
- Transparently handles gzip or zip compressed reports
- Consistent data structures
- Simple JSON and/or CSV output
- Optionally email the results
- Optionally send the results to Elasticsearch and/or Splunk, for use with premade dashboards
- Optionally send reports to Apache Kafka
**L∆∞u √Ω:** C√°c t√≠nh nƒÉng n√†y gi√∫p thu th·∫≠p v√† x·ª≠ l√Ω b√°o c√°o DMARC t·ª´ nhi·ªÅu ngu·ªìn (email, API), gi·∫£i n√©n, ph√¢n t√≠ch c√∫ ph√°p v√† xu·∫•t ra c√°c ƒë·ªãnh d·∫°ng c√≥ c·∫•u tr√∫c (JSON/CSV), ho·∫∑c g·ª≠i th·∫≥ng ƒë·∫øn SIEM (Elasticsearch, Splunk) ho·∫∑c Kafka ƒë·ªÉ ph√¢n t√≠ch s√¢u h∆°n v√† hi·ªÉn th·ªã tr√™n dashboard. R·∫•t gi√° tr·ªã cho Blue Team ƒë·ªÉ gi√°m s√°t vi·ªác s·ª≠ d·ª•ng domain c·ªßa m√¨nh trong c√°c chi·∫øn d·ªãch phishing.

![image](https://user-images.githubusercontent.com/100603074/217382301-064ac450-3690-469d-9c86-c2e3c6cdeca9.png)

*Image used from https://github.com/domainaware/parsedmarc*

### [üîô](#tool-list)[**Phishing Catcher**](https://github.com/x0rz/phishing_catcher)

As a business, **phishing** can cause reputational and financial damage to you and your customers. Being able to proactively identify phishing infrastructure targeting your business helps to reduce the risk of these damages.
**L∆∞u √Ω:** Blue Team c·∫ßn ch·ªß ƒë·ªông t√¨m ki·∫øm c√°c chi·∫øn d·ªãch phishing s·ª≠ d·ª•ng t√™n th∆∞∆°ng hi·ªáu c·ªßa t·ªï ch·ª©c m√¨nh ƒë·ªÉ c·∫£nh b√°o ng∆∞·ªùi d√πng ho·∫∑c y√™u c·∫ßu g·ª° b·ªè c√°c trang web ƒë·ªôc h·∫°i.

**Phish catcher** allows you to catch possible phishing domains in near real time by looking for suspicious TLS certificate issuances reported to the **Certificate Transparency Log (CTL)** via the **CertStream API**.

"Suspicious" issuances are those whose domain name scores beyond a certain threshold based on a configuration file.
**L∆∞u √Ω:** K·ªπ thu·∫≠t Certificate Transparency Log ghi l·∫°i th√¥ng tin v·ªÅ m·ªçi ch·ª©ng ch·ªâ TLS/SSL ƒë∆∞·ª£c c·∫•p. **Phishing Catcher** theo d√µi c√°c log n√†y, t√¨m ki·∫øm c√°c t√™n mi·ªÅn ƒë∆∞·ª£c c·∫•p ch·ª©ng ch·ªâ m√† gi·ªëng t√™n mi·ªÅn c·ªßa t·ªï ch·ª©c (d√πng c√°c thu·∫≠t to√°n so kh·ªõp m·ªù - fuzzy matching) v√† c·∫£nh b√°o. ƒê√¢y l√† ph∆∞∆°ng ph√°p proactive ƒë·ªÉ ph√°t hi·ªán h·∫° t·∫ßng phishing s·ªõm.

![image](https://user-images.githubusercontent.com/100603074/217382453-400a044b-720d-47ce-adff-0a23e5511ae1.png)

*Image used from https://github.com/x0rz/phishing_catcher*

### [üîô](#tool-list)[**maltrail**](https://github.com/stamparm/maltrail)

**Maltrail** is a malicious traffic detection system, utilizing publicly available lists containing malicious and/or generally suspicious trails, along with static trails compiled from various AV reports and custom user defined lists. A trail can be anything from domain name, URL, IP address or HTTP User-Agent header value.
**L∆∞u √Ω:** Maltrail l√† m·ªôt c√¥ng c·ª• gi√°m s√°t m·∫°ng (network monitoring tool) c√≥ th·ªÉ ho·∫°t ƒë·ªông nh∆∞ m·ªôt IDS/IPS d·ª±a tr√™n vi·ªác so s√°nh l∆∞u l∆∞·ª£ng m·∫°ng v·ªõi c√°c ch·ªâ b√°o ƒë·ªôc h·∫°i (domain, IP, URL, User-Agent) t·ª´ c√°c feed c√¥ng khai ho·∫∑c t√πy ch·ªânh.

A demo page for this tool can be found [t·∫°i ƒë√¢y](https://maltraildemo.github.io/).

**Install:**

```bash
sudo apt-get install git python3 python3-dev python3-pip python-is-python3 libpcap-dev build-essential procps schedtool
sudo pip3 install pcapy-ng
git clone --depth 1 https://github.com/stamparm/maltrail.git
cd maltrail
```
**L∆∞u √Ω:** C√°c l·ªánh c√†i ƒë·∫∑t dependency h·ªá th·ªëng v√† th∆∞ vi·ªán Python, sau ƒë√≥ clone m√£ ngu·ªìn c·ªßa **Maltrail**.

**Usage:**

```bash
sudo python3 sensor.py
```
**L∆∞u √Ω:** L·ªánh ch·∫°y th√†nh ph·∫ßn sensor c·ªßa **Maltrail** ƒë·ªÉ b·∫Øt ƒë·∫ßu gi√°m s√°t l∆∞u l∆∞·ª£ng m·∫°ng. C·∫ßn quy·ªÅn root (`sudo`) ƒë·ªÉ truy c·∫≠p raw packet.

![image](https://user-images.githubusercontent.com/100603074/217382540-fa1283d7-9825-4529-a92f-11f447e4657b.png)

*Image used from https://github.com/stamparm/maltrail*

### [üîô](#tool-list)[**AutorunsToWinEventLog**](https://github.com/palantir/windows-event-forwarding/tree/master/AutorunsToWinEventLog)

**Autoruns** is a tool developed by **Sysinternals** that allows you to view all of the locations in **Windows** where applications can insert themselves to launch at boot or when certain applications are opened. **Malware** often takes advantages of these locations to ensure that it runs whenever your computer boots up.
**L∆∞u √Ω:** Autoruns c·ªßa Sysinternals li·ªát k√™ c√°c v·ªã tr√≠ **autorun** (n∆°i ch∆∞∆°ng tr√¨nh c√≥ th·ªÉ t·ª± kh·ªüi ƒë·ªông c√πng h·ªá th·ªëng). ƒê√¢y l√† n∆°i ph·ªï bi·∫øn ƒë·ªÉ malware thi·∫øt l·∫≠p duy tr√¨ truy c·∫≠p (persistence).

**Autoruns** conveniently includes a non-interactive command line utility. This code generates a CSV of Autoruns entries, converts them to JSON, and finally inserts them into a custom Windows Event Log. By doing this, we can take advantage of our existing **WEF** infrastructure to get these entries into our SIEM and start looking for signs of malicious persistence on endpoints and servers.
**L∆∞u √Ω:** K·ªπ thu·∫≠t n√†y t·ª± ƒë·ªông ch·∫°y b·∫£n d√≤ng l·ªánh c·ªßa Autoruns (`Autorunsc`), thu th·∫≠p th√¥ng tin v·ªÅ persistence, x·ª≠ l√Ω v√† ghi k·∫øt qu·∫£ v√†o **Windows Event Log**. ƒêi·ªÅu n√†y gi√∫p t·∫≠p trung h√≥a th√¥ng tin persistence v√†o SIEM th√¥ng qua Windows Event Forwarding (**WEF**), cho ph√©p Blue Team gi√°m s√°t h√†ng lo·∫°t m√°y t√≠nh ƒë·ªÉ t√¨m d·∫•u hi·ªáu persistence ƒë·ªôc h·∫°i m√† kh√¥ng c·∫ßn ki·ªÉm tra th·ªß c√¥ng.

**Install:**

Download [**AutorunsToWinEventLog**](https://github.com/palantir/windows-event-forwarding/tree/master/AutorunsToWinEventLog).

**Usage:**

From an Admin Powershell console run `.\Install.ps1`

This script does the following:

- Creates the directory structure at c:\Program Files\AutorunsToWinEventLog
- Copies over AutorunsToWinEventLog.ps1 to that directory
- Downloads Autorunsc64.exe from https://live.sysinternals.com
- Sets up a scheduled task to run the script daily @ 11am
**L∆∞u √Ω:** **Script PowerShell Install.ps1** t·ª± ƒë·ªông h√≥a vi·ªác tri·ªÉn khai. N√≥ t·∫°o th∆∞ m·ª•c, sao ch√©p script ch√≠nh, t·∫£i `Autorunsc64.exe` (b·∫£n d√≤ng l·ªánh c·ªßa Autoruns) v√† thi·∫øt l·∫≠p m·ªôt t√°c v·ª• theo l·ªãch ƒë·ªÉ ch·∫°y script thu th·∫≠p d·ªØ li·ªáu ƒë·ªãnh k·ª≥. Y√™u c·∫ßu quy·ªÅn qu·∫£n tr·ªã vi√™n ƒë·ªÉ ch·∫°y script c√†i ƒë·∫∑t n√†y.

![image](https://user-images.githubusercontent.com/100603074/218199447-40e7add1-68ee-44e2-a297-3bf03c977a9c.png)

*Image used from https://www.detectionlab.network/usage/autorunstowineventlog/*

### [üîô](#tool-list)[**procfilter**](https://github.com/godaddy/procfilter)

**ProcFilter** is a process filtering system for **Windows** with built-in [YARA](https://github.com/virustotal/yara) integration. **YARA** rules can be instrumented with custom meta tags that tailor its response to rule matches. It runs as a Windows service and is integrated with [Microsoft's ETW API](https://msdn.microsoft.com/en-us/library/windows/desktop/bb968803%28v=vs.85%29.aspx), making results viewable in the **Windows Event Log**. Installation, activation, and removal can be done dynamically and does not require a reboot.
**L∆∞u √Ω:** ProcFilter ho·∫°t ƒë·ªông ·ªü m·ª©c ƒë·ªô kernel (l√† m·ªôt driver/service), gi√°m s√°t v√† c√≥ th·ªÉ ngƒÉn ch·∫∑n vi·ªác t·∫°o/th·ª±c thi ti·∫øn tr√¨nh d·ª±a tr√™n c√°c quy t·∫Øc. T√≠ch h·ª£p **YARA** cho ph√©p t·∫°o c√°c quy t·∫Øc ph√°t hi·ªán ph·ª©c t·∫°p d·ª±a tr√™n n·ªôi dung ho·∫∑c thu·ªôc t√≠nh c·ªßa file th·ª±c thi. K·∫øt qu·∫£ ƒë∆∞·ª£c ghi v√†o **Windows Event Log** th√¥ng qua **ETW** (Event Tracing for Windows).

**ProcFilter's** intended use is for **malware analysts** to be able to create **YARA signatures** that protect their Windows environments against a specific threat. It does not include a large signature set. Think lightweight, precise, and targeted rather than broad or all-encompassing. **ProcFilter** is also intended for use in controlled analysis environments where custom plugins can perform artifact-specific actions.
**L∆∞u √Ω:** M·ª•c ƒë√≠ch ch√≠nh l√† cho c√°c nh√† ph√¢n t√≠ch **malware** (Blue Team) ƒë·ªÉ t·∫°o c√°c quy t·∫Øc ph√°t hi·ªán/ch·∫∑n r·∫•t c·ª• th·ªÉ cho c√°c m·ªëi ƒëe d·ªça m·ªõi, thay v√¨ m·ªôt b·ªô quy t·∫Øc AV t·ªïng qu√°t. N√≥ ho·∫°t ƒë·ªông t·ªët trong c√°c m√¥i tr∆∞·ªùng lab ho·∫∑c m√°y ch·ªß nh·∫°y c·∫£m.

**Install:**

[ProcFilter x86/x64 Release/Debug Installers](https://github.com/godaddy/procfilter/releases)

*Note: Unpatched Windows 7 systems require hotfix 3033929 to load the driver component. More information can be found here.*

Nice configuration template file [t·∫°i ƒë√¢y](https://github.com/godaddy/procfilter/blob/master/files/procfilter.ini).

**Usage:**

```
procfilter -start
```
**L∆∞u √Ω:** L·ªánh `procfilter -start` ƒë·ªÉ b·∫Øt ƒë·∫ßu service **ProcFilter**. C√°c t√πy ch·ªçn kh√°c th∆∞·ªùng l√† c√†i ƒë·∫∑t service, d·ª´ng service, g·ª° c√†i ƒë·∫∑t, t·∫£i/t·∫£i l·∫°i file c·∫•u h√¨nh (`procfilter.ini`). File c·∫•u h√¨nh n√†y ch·ª©a c√°c quy t·∫Øc YARA v√† h√†nh ƒë·ªông khi quy t·∫Øc kh·ªõp (v√≠ d·ª•: log, block).

Usage screenshots can be found [t·∫°i ƒë√¢y](https://github.com/godaddy/procfilter#screenshots).

![image](https://user-images.githubusercontent.com/100603074/218200282-f2465b93-169a-43d6-8e12-dea61ed9272c.png)

*Image used from https://github.com/godaddy/procfilter*

### [üîô](#tool-list)[**velociraptor**](https://github.com/Velocidex/velociraptor)

**Velociraptor** is a unique, advanced open-source **endpoint monitoring, digital forensic and cyber response platform**.

It was developed by **Digital Forensic and Incident Response (DFIR)** professionals who needed a powerful and efficient way to hunt for specific artifacts and monitor activities across fleets of endpoints. **Velociraptor** provides you with the ability to more effectively respond to a wide range of digital forensic and cyber incident response investigations and data breaches:
**L∆∞u √Ω:** Velociraptor l√† m·ªôt n·ªÅn t·∫£ng DFIR hi·ªán ƒë·∫°i. N√≥ cho ph√©p thu th·∫≠p d·ªØ li·ªáu ph√°p y t·ª´ xa, th·ª±c hi·ªán threat hunting t·ª± ƒë·ªông tr√™n nhi·ªÅu m√°y c√πng l√∫c v√† ph·∫£n ·ª©ng nhanh v·ªõi s·ª± c·ªë b·∫±ng c√°ch ch·∫°y c√°c "artefact" (quy tr√¨nh thu th·∫≠p d·ªØ li·ªáu t√πy ch·ªânh). R·∫•t m·∫°nh m·∫Ω cho Blue Team trong m√¥i tr∆∞·ªùng ph√¢n t√°n.

Features:

- Reconstruct attacker activities through **digital forensic analysis**
- Hunt for evidence of sophisticated adversaries
- Investigate malware outbreaks and other suspicious network activities
- Monitory continuously for suspicious user activities, such as files copied to **USB** devices
- Discover whether disclosure of confidential information occurred outside the network
- Gather endpoint data over time for use in **threat hunting** and future investigations
**L∆∞u √Ω:** C√°c t√≠nh nƒÉng ch√≠nh c·ªßa Velociraptor cho th·∫•y kh·∫£ nƒÉng ·ª©ng d·ª•ng r·ªông r√£i trong c√°c ho·∫°t ƒë·ªông c·ªßa Blue Team: thu th·∫≠p b·∫±ng ch·ª©ng ph√°p y, threat hunting (ch·ªß ƒë·ªông t√¨m ki·∫øm), gi√°m s√°t h√†nh vi ng∆∞·ªùi d√πng (log USB...), v√† ƒëi·ªÅu tra r√≤ r·ªâ d·ªØ li·ªáu.

**Install:**

Download the binary from the [release page](https://github.com/Velocidex/velociraptor/releases).
**L∆∞u √Ω:** C√≥ file binary ƒë·ªôc l·∫≠p cho nhi·ªÅu h·ªá ƒëi·ªÅu h√†nh, d·ªÖ d√†ng tri·ªÉn khai th√†nh agent ho·∫∑c server.

**Usage:**

```
velociraptor gui
```
**L∆∞u √Ω:** L·ªánh ch·∫°y **Velociraptor** ·ªü ch·∫ø ƒë·ªô GUI (th∆∞·ªùng cho m·ª•c ƒë√≠ch test ho·∫∑c server nh·ªè).

Full usage information can be found [t·∫°i ƒë√¢y](https://docs.velociraptor.app/).

![image](https://user-images.githubusercontent.com/100603074/218200327-3f5ab599-11f1-46dc-8f28-b27c1258224a.png)

*Image used from https://docs.velociraptor.app*

### [üîô](#tool-list)[**SysmonSearch**](https://github.com/JPCERTCC/SysmonSearch)

**SysmonSearch** makes event log analysis more effective and less time consuming, by aggregating event logs generated by **Microsoft's Sysmon**.
**L∆∞u √Ω:** **SysmonSearch** l√† m·ªôt gi·∫£i ph√°p b·ªï sung ƒë·ªÉ ph√¢n t√≠ch log Sysmon. Thay v√¨ ch·ªâ xem log th√¥, n√≥ gi√∫p t·∫≠p trung v√† ph√¢n t√≠ch.

**SysmonSearch** uses Elasticserach and **Kibana** (and Kibana plugin).
  * **Elasticserach**
    **Elasticsearch** collects/stores Sysmon's event log.
  * **Kibana**
    **Kibana** provides user interface for your Sysmon's event log analysis. The following functions are implemented as **Kibana plugin**.
    * Visualizes Function
      This function visualizes **Sysmon's** event logs to illustrate correlation of processes and networks.
    * Statistical Function
      This function collects the statistics of each device or **Sysmon's event ID**.
    * Monitor Function
      This function monitor incoming logs based on the preconfigured rules, and trigers alert.
  * **StixIoC server**
    You can add search/monitor condition by uploading STIX/IOC file. From **StixIoC server Web UI**, you can upload STIXv1, STIXv2 and OpenIOC format files.
**L∆∞u √Ω:** **SysmonSearch** t√≠ch h·ª£p v·ªõi Elastic Stack (**Elasticsearch, Kibana**) v√† th√™m c√°c t√≠nh nƒÉng chuy√™n bi·ªát ƒë·ªÉ ph√¢n t√≠ch log **Sysmon** hi·ªáu qu·∫£ h∆°n (tr·ª±c quan h√≥a m·ªëi li√™n h·ªá ti·∫øn tr√¨nh/m·∫°ng, th·ªëng k√™, gi√°m s√°t v√† c·∫£nh b√°o). N√≥ c≈©ng h·ªó tr·ª£ import IoC t·ª´ c√°c ƒë·ªãnh d·∫°ng chu·∫©n nh∆∞ STIX v√† OpenIOC.

**Install (Linux):**

```bash
git clone https://github.com/JPCERTCC/SysmonSearch.git
```
**L∆∞u √Ω:** Clone m√£ ngu·ªìn. C·∫ßn c√†i ƒë·∫∑t Elastic Stack tr∆∞·ªõc ƒë√≥.

[Modify Elasticsearch configuration](https://github.com/JPCERTCC/SysmonSearch/wiki/Install#elasticsearch-server-setup)

[Modify Kibana configuration](https://github.com/JPCERTCC/SysmonSearch/wiki/Install#kibana-server-setup)

Full installation instructions can be found [t·∫°i ƒë√¢y](https://github.com/JPCERTCC/SysmonSearch/wiki/Install).

**C√°ch s·ª≠ d·ª•ng:**

*Once Elasticsearch and Kibana configurations have been modified, restart the services and navigate to your **Kibana interface**. The **SysmonSearch ribbon** should be visible.*

[Visualize the Sysmon log to investigate suspicious behavior](https://blogs.jpcert.or.jp/ja/2018/09/SysmonSearch.html)

![image](https://user-images.githubusercontent.com/100603074/218200383-84e4c9f4-3e34-4973-b37c-a9160a74b5e0.png)

*Image used from https://blogs.jpcert.or.jp/ja/2018/09/SysmonSearch.html*

**C√¥ng c·ª• v√† K·ªπ thu·∫≠t ƒêe d·ªça**
====================

*C√°c c√¥ng c·ª• ƒë·ªÉ nh·∫≠n d·∫°ng v√† tri·ªÉn khai c√°c bi·ªán ph√°p ph√°t hi·ªán ch·ªëng l·∫°i c√°c TTP ƒë∆∞·ª£c s·ª≠ d·ª•ng b·ªüi c√°c t√°c nh√¢n ƒëe d·ªça.*

### [üîô](#tool-list)[**lolbas-project.github.io**](https://lolbas-project.github.io/)

Living off the land binaries (**LOLBins**) are legitimate Windows executables that can be used by threat actors to carry out malicious activities without raising suspicion.

Using **LOLBins** allows attackers to blend in with normal system activity and evade detection, making them a popular choice for malicious actors.
**L∆∞u √Ω:** LOLBins l√† c√°c t·ªáp th·ª±c thi ho·∫∑c script c·ªßa h·ªá th·ªëng Windows ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ th·ª±c hi·ªán c√°c t√°c v·ª• h·ª£p ph√°p, nh∆∞ng k·∫ª t·∫•n c√¥ng l·∫°m d·ª•ng ch√∫ng cho m·ª•c ƒë√≠ch ƒë·ªôc h·∫°i (v√≠ d·ª•: `certutil.exe` ƒë·ªÉ t·∫£i file, `bitsadmin.exe` ƒë·ªÉ truy·ªÅn file, `cscript.exe` ƒë·ªÉ ch·∫°y script...). Ch√∫ng kh√≥ b·ªã ph√°t hi·ªán b·∫±ng c√°c gi·∫£i ph√°p b·∫£o m·∫≠t truy·ªÅn th·ªëng d·ª±a tr√™n ch·ªØ k√Ω.

The **LOLBAS project** is a MITRE mapped list of **LOLBINS** with commands, usage and detection information for defenders.
**L∆∞u √Ω:** Project LOLBAS (Living Off a Little Bit Susi) thu th·∫≠p v√† t√†i li·ªáu h√≥a c√°ch c√°c binary/script h·ªá th·ªëng Windows b·ªã l·∫°m d·ª•ng, cung c·∫•p th√¥ng tin cho Blue Team ƒë·ªÉ hi·ªÉu TTP n√†y v√† t·∫°o c√°c quy t·∫Øc ph√°t hi·ªán d·ª±a tr√™n d√≤ng l·ªánh, k·∫øt n·ªëi m·∫°ng, ho·∫∑c h√†nh vi b·∫•t th∆∞·ªùng c·ªßa c√°c LOLBins. √Ånh x·∫° v·ªõi framework **MITRE ATT&CK**.

Visit [https://lolbas-project.github.io/](https://lolbas-project.github.io/).

**Usage:**

Use the information for detection opportunities to harden your infrastructure against **LOLBIN usage**.

Here are some project links to get started:

- [Bitsadmin.exe](https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/)
- [Certutil.exe](https://lolbas-project.github.io/lolbas/Binaries/Certutil/)
- [Cscript.exe](https://lolbas-project.github.io/lolbas/Binaries/Cscript/)
**L∆∞u √Ω:** B·∫°n n√™n duy·ªát c√°c trang n√†y ƒë·ªÉ xem c√°c l·ªánh c·ª• th·ªÉ m√† attacker s·ª≠ d·ª•ng v·ªõi t·ª´ng binary, t·ª´ ƒë√≥ t·∫°o ra c√°c c·∫£nh b√°o trong SIEM ho·∫∑c EDR (v√≠ d·ª•: alert khi certutil.exe th·ª±c thi v·ªõi ƒë·ªëi s·ªë li√™n quan ƒë·∫øn t·∫£i file t·ª´ URL).

![image](https://user-images.githubusercontent.com/100603074/210625466-9ab87233-e822-4961-a68a-f863f56ef830.png)

*Image used from https://lolbas-project.github.io/*

### [üîô](#tool-list)[**gtfobins.github.io**](https://gtfobins.github.io/)

**GTFOBins** (short for "Get The F* Out Binaries") is a collection of Unix binaries that can be used to escalate privileges, bypass restrictions, or execute arbitrary commands on a system.
**L∆∞u √Ω:** GTFOBins t∆∞∆°ng t·ª± nh∆∞ LOLBAS nh∆∞ng d√†nh cho h·ªá th·ªëng Linux/Unix. N√≥ t·∫≠p h·ª£p c√°c binary (wget, curl, vi, awk...) c√≥ s·∫µn tr√™n h·∫ßu h·∫øt c√°c h·ªá th·ªëng Linux c√≥ th·ªÉ b·ªã l·∫°m d·ª•ng cho c√°c m·ª•c ƒë√≠ch t·∫•n c√¥ng nh∆∞ tho√°t kh·ªèi m√¥i tr∆∞·ªùng b·ªã gi·ªõi h·∫°n (shell b·ªã gi·ªõi h·∫°n), bypass `sudo`, th·ª±c thi l·ªánh t√πy √Ω...

They can be used by threat actors to gain unauthorized access to systems and carry out malicious activities.

The **GTFOBins** project is a list of Unix binaries with command and usage information for attackers. This information can be used to implement unix detections.
**L∆∞u √Ω:** M·∫∑c d√π trang web tr√¨nh b√†y t·ª´ g√≥c ƒë·ªô attacker, Blue Team s·ª≠ d·ª•ng n√≥ ƒë·ªÉ hi·ªÉu c√°c k·ªπ thu·∫≠t l·∫°m d·ª•ng c√°c binary Linux v√† t·∫°o c√°c quy t·∫Øc ph√°t hi·ªán cho m√¥i tr∆∞·ªùng Linux c·ªßa m√¨nh.

Visit [https://gtfobins.github.io/](https://gtfobins.github.io/).

**Usage:**

Here are some project links to get started:

- [base64](https://gtfobins.github.io/gtfobins/base64/)
- [curl](https://gtfobins.github.io/gtfobins/curl/)
- [nano](https://gtfobins.github.io/gtfobins/nano/)
**L∆∞u √Ω:** Blue Team xem c√°c trang c·ªßa t·ª´ng binary ƒë·ªÉ th·∫•y c√°c l·ªánh c·ª• th·ªÉ m√† attacker d√πng (v√≠ d·ª•: c√°ch d√πng `base64` ƒë·ªÉ th·ª±c thi l·ªánh t·ª´ chu·ªói base64, c√°ch d√πng `curl` ƒë·ªÉ upload/download file theo c√°ch l√©n l√∫t, c√°ch d√πng c√°c text editor nh∆∞ `nano` ƒë·ªÉ tho√°t kh·ªèi shell gi·ªõi h·∫°n), sau ƒë√≥ t·∫°o detection rules.

![image](https://user-images.githubusercontent.com/100603074/210625527-6a037b81-e3fe-4282-a193-1cc4b9c06f75.png)

*Image used from https://gtfobins.github.io/*

### [üîô](#tool-list)[**filesec.io**](https://filesec.io/)

**Filesec** is a list of file extensions that can be used by attackers for **phishing, execution, macros** etc.

This is a nice resource to understand the malicious use cases of common file extentions and ways that you can defend against them.

Each file extension page contains a description, related operating system and recommendations.
**L∆∞u √Ω:** Blue Team n√™n tham kh·∫£o ngu·ªìn n√†y ƒë·ªÉ hi·ªÉu c√°c r·ªßi ro li√™n quan ƒë·∫øn t·ª´ng lo·∫°i ph·∫ßn m·ªü r·ªông file (ƒë·∫∑c bi·ªát l√† c√°c lo·∫°i √≠t ph·ªï bi·∫øn ho·∫∑c th∆∞·ªùng b·ªã l·∫°m d·ª•ng) v√† c√°ch ph√≤ng v·ªá (v√≠ d·ª•: ch·∫∑n file lo·∫°i ƒë√≥ ·ªü c·ªïng email/proxy, c·∫•u h√¨nh ch√≠nh s√°ch h·∫°n ch·∫ø th·ª±c thi file theo lo·∫°i).

Visit [https://filesec.io/](https://filesec.io/).

**Usage:**

Here are some project links to get started:

- [.Docm](https://filesec.io/docm)
- [.Iso](https://filesec.io/iso)
- [.Ppam](https://filesec.io/ppam)
**L∆∞u √Ω:** M·ªói trang v·ªÅ m·ªôt ph·∫ßn m·ªü r·ªông file cung c·∫•p th√¥ng tin v·ªÅ r·ªßi ro v√† c√°c bi·ªán ph√°p ph√≤ng v·ªá li√™n quan ƒë·∫øn n√≥.

![image](https://user-images.githubusercontent.com/100603074/210625626-58223992-2821-42c6-878a-e6aea4b9a508.png)

*Image used from https://filesec.io/*

### [üîô](#tool-list)[**KQL Search**](https://www.kqlsearch.com/)

**KQL** stands for "**Kusto Query Language**", and it is a query language used to search and filter data in **Azure Monitor** logs. It is similar to SQL, but is more optimized for log analytics and time-series data.
**L∆∞u √Ω:** KQL ƒë∆∞·ª£c s·ª≠ d·ª•ng r·ªông r√£i trong c√°c d·ªãch v·ª• logging v√† ph√¢n t√≠ch c·ªßa Microsoft nh∆∞ Azure Monitor, Azure Sentinel/Microsoft Sentinel, v√† Application Insights.

**KQL query language** is particularly useful for blue teamers because it allows you to quickly and easily search through large volumes of log data to identify security events and anomalies that may indicate a threat.

**KQL Search** is a web app created by [@ugurkocde](https://twitter.com/ugurkocde) that aggregates **KQL queries** that are shared on GitHub.
**L∆∞u √Ω:** ƒê√¢y l√† m·ªôt ngu·ªìn t√†i nguy√™n h·ªØu √≠ch ƒë·ªÉ Blue Team t√¨m c√°c truy v·∫•n KQL ƒë√£ ƒë∆∞·ª£c c·ªông ƒë·ªìng chia s·∫ª ƒë·ªÉ ph√°t hi·ªán c√°c TTP, l·ªó h·ªïng, ho·∫∑c c√°c h√†nh vi ƒë·ªôc h·∫°i trong log Azure/Windows.

You can visit the site at [https://www.kqlsearch.com/](https://www.kqlsearch.com/).

More information about **Kusto Query Language (KQL)** can be found [t·∫°i ƒë√¢y](https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/).

![image](https://user-images.githubusercontent.com/100603074/210736862-1e0cf987-7c85-40c1-b51c-1f3a1f946f7d.png)

*Image used from https://www.kqlsearch.com/*

### [üîô](#tool-list)[**Unprotect Project**](https://unprotect.it/about/)

Malware authors spend a great deal of time and effort to develop complex code to perform malicious actions against a target system. It is crucial for malware to remain undetected and avoid sandbox analysis, antiviruses or malware analysts.

With this kind of technics, **malware** are able to pass under the radar and stay undetected on a system. The goal of this free database is to centralize the information about **malware evasion techniques**.
**L∆∞u √Ω:** **Unprotect Project** t·∫≠p trung v√†o c√°c k·ªπ thu·∫≠t m√† malware s·ª≠ d·ª•ng ƒë·ªÉ n√© tr√°nh b·ªã ph√°t hi·ªán (b·ªüi AV, EDR, sandbox) v√† n√© tr√°nh b·ªã ph√¢n t√≠ch (b·ªüi malware analyst).

The project aims to provide **Malware Analysts and Defenders** with actionable insights and detection capabilities to shorten their response times.
**L∆∞u √Ω:** Th√¥ng tin n√†y r·∫•t h·ªØu √≠ch cho Blue Team v√† c√°c nh√† ph√¢n t√≠ch **malware** ƒë·ªÉ hi·ªÉu c√°ch c√°c ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i hi·ªán ƒë·∫°i ·∫©n m√¨nh, t·ª´ ƒë√≥ c·∫£i thi·ªán c√°c bi·ªán ph√°p ph√≤ng v·ªá (t·∫°o detection logic tinh vi h∆°n, c·∫•u h√¨nh sandbox hi·ªáu qu·∫£ h∆°n,...) v√† ƒë·∫©y nhanh qu√° tr√¨nh ·ª©ng ph√≥.

The project can be found at [https://unprotect.it/](https://unprotect.it/).

The project has an **API** - Docs [t·∫°i ƒë√¢y](https://unprotect.it/api/).

![image](https://user-images.githubusercontent.com/100603074/210743650-6adaddce-ecb3-41bb-854b-292482b73d55.png)

*Image used from https://unprotect.it/map/*

### [üîô](#tool-list)[**chainsaw**](https://github.com/WithSecureLabs/chainsaw)

**Chainsaw** provides a powerful ‚Äòfirst-response‚Äô capability to quickly identify threats within **Windows forensic artefacts** such as **Event Logs** and MFTs. **Chainsaw** offers a generic and fast method of searching through **event logs** for keywords, and by identifying threats using built-in support for **Sigma detection rules**, and via custom **Chainsaw** detection rules.
**L∆∞u √Ω:** Chainsaw l√† m·ªôt c√¥ng c·ª• ph√¢n t√≠ch log v√† forensic nhanh tr√™n h·ªá th·ªëng Windows, t·∫≠p trung v√†o Event Logs (EVTX) v√† MFT (Master File Table). ƒêi·ªÉm m·∫°nh l√† t·ªëc ƒë·ªô v√† t√≠ch h·ª£p v·ªõi lu·∫≠t **Sigma** - m·ªôt ƒë·ªãnh d·∫°ng chu·∫©n ƒë·ªÉ vi·∫øt lu·∫≠t ph√°t hi·ªán TTP.

Features:

- Hunt for threats using **Sigma detection rules** and custom **Chainsaw detection rules**
- Search and extract **forensic artefacts** by string matching, and regex patterns
- Lightning fast, written in rust, wrapping the **EVTX parser library** by @OBenamram
- Clean and lightweight execution and output formats without unnecessary bloat
- Document tagging (detection logic matching) provided by the **TAU Engine Library**
- Output results in a variety of formats, such as ASCII table format, CSV format, and JSON format
- Can be run on **MacOS, Linux** and **Windows**
**L∆∞u √Ω:** C√°c t√≠nh nƒÉng cho th·∫•y Chainsaw m·∫°nh m·∫Ω cho threat hunting v√† ph√¢n t√≠ch s·ª± c·ªë: t√¨m ki·∫øm d·ª±a tr√™n lu·∫≠t ph√°t hi·ªán (Sigma, Chainsaw), tr√≠ch xu·∫•t d·ªØ li·ªáu d·ª±a tr√™n pattern, x·ª≠ l√Ω log EVTX nhanh ch√≥ng, h·ªó tr·ª£ nhi·ªÅu ƒë·ªãnh d·∫°ng output. Kh·∫£ nƒÉng ch·∫°y tr√™n nhi·ªÅu HƒêH l√† m·ªôt l·ª£i th·∫ø.

**Install:**

```bash
git clone https://github.com/countercept/chainsaw.git
cargo build --release
git clone https://github.com/SigmaHQ/sigma
git clone https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES.git
```
**L∆∞u √Ω:** T·∫£i m√£ ngu·ªìn **Chainsaw** b·∫±ng **Git**, bi√™n d·ªãch n√≥ b·∫±ng **Cargo** (tr√¨nh qu·∫£n l√Ω g√≥i Rust), v√† t·∫£i th√™m c√°c repository ch·ª©a lu·∫≠t **Sigma** v√† c√°c m·∫´u Event Log t·∫•n c√¥ng (ƒë·ªÉ test ho·∫∑c l√†m quen).

**Usage:**

```bash
./chainsaw hunt EVTX-ATTACK-SAMPLES/ -s sigma/ --mapping mappings/sigma-event-logs-all.yml
```
**L∆∞u √Ω:** V√≠ d·ª• s·ª≠ d·ª•ng `chainsaw hunt` ƒë·ªÉ t√¨m ki·∫øm c√°c d·∫•u hi·ªáu t·∫•n c√¥ng trong c√°c file Event Log m·∫´u (`EVTX-ATTACK-SAMPLES/`) s·ª≠ d·ª•ng c√°c lu·∫≠t **Sigma** (`-s sigma/`) v√† file √°nh x·∫° (mapping file).

![image](https://user-images.githubusercontent.com/100603074/217382675-1834c13d-1789-4ea7-a46e-25808477bcf0.png)

*Image used from https://twitter.com/FranticTyping/status/1433386064429916162/*

### [üîô](#tool-list)[**freq**](https://github.com/MarkBaggett/freq)

Adversaries attempt to bypass signature based/pattern matching/blacklist techniques by introducing random: filenames, service names, workstation names, domains, hostnames, SSL cert subjects and issuer subjects, etc.
**L∆∞u √Ω:** K·ªπ thu·∫≠t t·∫°o t√™n ng·∫´u nhi√™n cho file, domain,... ƒë∆∞·ª£c **malware** v√† attacker s·ª≠ d·ª•ng ƒë·ªÉ tr√°nh b·ªã ph√°t hi·ªán b·∫±ng c√°c bi·ªán ph√°p d·ª±a tr√™n blacklist ho·∫∑c pattern tƒ©nh. Vi·ªác ph√¢n t√≠ch entropy c·ªßa chu·ªói c√≥ th·ªÉ gi√∫p ph√°t hi·ªán.

**Freq** is a python API designed by Mark Baggett to handle mass entropy testing. It was designed to be used in conjunction with a SIEM solutions but can work with anything that can submit a web request.

The tool uses frequency tables that map how likely one character will follow another
**L∆∞u √Ω:** Freq ph√¢n t√≠ch kh·∫£ nƒÉng ng·∫´u nhi√™n (entropy) c·ªßa c√°c chu·ªói (ƒë·∫∑c bi·ªát l√† t√™n domain, hostname,...) d·ª±a tr√™n t·∫ßn su·∫•t xu·∫•t hi·ªán c·ªßa c√°c k√Ω t·ª± v√† s·ª± k·∫øt h·ª£p c·ªßa ch√∫ng trong ng√¥n ng·ªØ t·ª± nhi√™n. Entropy cao h∆°n b√¨nh th∆∞·ªùng c√≥ th·ªÉ l√† d·∫•u hi·ªáu c·ªßa thu·∫≠t to√°n t·∫°o domain (**DGA**), m·ªôt k·ªπ thu·∫≠t **malware** d√πng ƒë·ªÉ li√™n l·∫°c v·ªõi **C2**.

**Install:**

```bash
git clone https://github.com/MarkBaggett/freq
cd freq
```
**L∆∞u √Ω:** C√†i ƒë·∫∑t b·∫±ng Git. Freq l√† m·ªôt **package/script Python**.

**Usage:**

```bash
# Running freq_server.py on port 10004 and using a frequency table of /opt/freq/dns.freq
/usr/bin/python /opt/freq/freq_server.py 10004 /opt/freq/dns.freq
```
**L∆∞u √Ω:** V√≠ d·ª• ch·∫°y server Freq. C√¥ng c·ª• n√†y c√≥ th·ªÉ ƒë∆∞·ª£c t√≠ch h·ª£p v√†o SIEM b·∫±ng c√°ch g·ª≠i c√°c chu·ªói c·∫ßn ki·ªÉm tra ƒë·∫øn server Freq th√¥ng qua API, sau ƒë√≥ SIEM x·ª≠ l√Ω k·∫øt qu·∫£. File `dns.freq` l√† m·ªôt file d·ªØ li·ªáu ch·ª©a t·∫ßn su·∫•t xu·∫•t hi·ªán k√Ω t·ª±/c·∫∑p k√Ω t·ª± trong c√°c t√™n domain h·ª£p l·ªá ƒë·ªÉ d√πng l√†m tham chi·∫øu.

### [üîô](#tool-list)[**yarGen**](https://github.com/Neo23x0/yarGen)

**yarGen** is a generator for YARA rules
**L∆∞u √Ω:** **YARA** l√† c√¥ng c·ª• gi√∫p nh·∫≠n d·∫°ng malware d·ª±a tr√™n c√°c lu·∫≠t (ch·ª©a chu·ªói k√Ω t·ª±, pattern binary...). **yarGen** gi√∫p t·ª± ƒë·ªông h√≥a qu√° tr√¨nh vi·∫øt c√°c lu·∫≠t YARA n√†y.

The main principle is the creation of **yara rules** from strings found in malware files while removing all strings that also appear in goodware files. Therefore **yarGen** includes a big goodware strings and opcode database as ZIP archives that have to be extracted before the first use.

The rule generation process also tries to identify similarities between the files that get analyzed and then combines the strings to so called super rules. The super rule generation does not remove the simple rule for the files that have been combined in a single super rule. This means that there is some redundancy when super rules are created. You can suppress a simple rule for a file that was already covered by super rule by using `--nosimple`.
**L∆∞u √Ω:** **yarGen** so s√°nh c√°c chu·ªói/pattern trong c√°c m·∫´u malware v·ªõi c∆° s·ªü d·ªØ li·ªáu c√°c chu·ªói/pattern t·ª´ "goodware" (ph·∫ßn m·ªÅm h·ª£p ph√°p) ƒë·ªÉ t·∫°o ra c√°c lu·∫≠t YARA ch·ªâ ch·ª©a c√°c y·∫øu t·ªë duy nh·∫•t c√≥ trong malware, gi·∫£m thi·ªÉu c·∫£nh b√°o sai (false positives). N√≥ c≈©ng c·ªë g·∫Øng gom c√°c lu·∫≠t t·ª´ c√°c malware t∆∞∆°ng t·ª± l·∫°i th√†nh "super rules".

**Install:**

Download the latest [release](https://github.com/Neo23x0/yarGen/releases).

```bash
pip install -r requirements.txt
python yarGen.py --update
```
**L∆∞u √Ω:** C√†i ƒë·∫∑t c√°c dependency Python v√† sau ƒë√≥ c·∫≠p nh·∫≠t c∆° s·ªü d·ªØ li·ªáu goodware c·ªßa **yarGen** b·∫±ng **script Python yarGen.py**.

**Usage:**

```bash
# Create a new strings and opcodes database from an Office 2013 program directory
yarGen.py -c --opcodes -i office -g /opt/packs/office2013

# Update the once created databases with the "-u" parameter
yarGen.py -u --opcodes -i office -g /opt/packs/office365
```
**L∆∞u √Ω:** C√°c v√≠ d·ª• v·ªÅ c√°ch s·ª≠ d·ª•ng **script Python yarGen.py** ƒë·ªÉ t·∫°o (`-c`) ho·∫∑c c·∫≠p nh·∫≠t (`-u`) c∆° s·ªü d·ªØ li·ªáu goodware/opcodes b·∫±ng c√°ch ch·ªâ ƒë·ªãnh lo·∫°i software (`-i`) v√† th∆∞ m·ª•c ch·ª©a c√°c file c·ªßa ph·∫ßn m·ªÅm ƒë√≥ (`-g`). ƒêi·ªÅu n√†y gi√∫pyarGen h·ªçc t·ª´ m√¥i tr∆∞·ªùng ph·∫ßn m·ªÅm h·ª£p ph√°p c·ª• th·ªÉ trong t·ªï ch·ª©c ƒë·ªÉ t·∫°o lu·∫≠t ch√≠nh x√°c h∆°n.

Usage examples can be found [t·∫°i ƒë√¢y](https://github.com/Neo23x0/yarGen#examples).

![image](https://user-images.githubusercontent.com/100603074/218200487-8476950d-c63e-4d5a-a03c-f2969b6001cc.png)

*Image used from https://github.com/Neo23x0/yarGen*

### [üîô](#tool-list)[**EmailAnalyzer**](https://github.com/keraattin/EmailAnalyzer)

With **EmailAnalyzer** you can able to analyze your suspicious emails. You can extract headers, links and hashes from the .eml file
**L∆∞u √Ω:** C√¥ng c·ª• n√†y h·ªó tr·ª£ ph√¢n t√≠ch ban ƒë·∫ßu c√°c email ƒë√°ng ng·ªù ƒë∆∞·ª£c l∆∞u d∆∞·ªõi d·∫°ng file `.eml`.

**Install:**

```bash
git clone https://github.com/keraattin/EmailAnalyzer
cd EmailAnalyzer
```
**L∆∞u √Ω:** C√†i ƒë·∫∑t b·∫±ng Git. ƒê√¢y l√† m·ªôt **script Python**.

**Usage:**

```bash
# View headers in eml file
python3 email-analyzer.py -f <eml file> --headers

# Get hashes
python3 email-analyzer.py -f <eml file> --digests

# Get links
python3 email-analyzer.py -f <eml file> --links

# Get attachments
python3 email-analyzer.py -f <eml file> --attachments
```
**L∆∞u √Ω:** C√°c v√≠ d·ª• s·ª≠ d·ª•ng **script Python email-analyzer.py** v·ªõi c·ªù `-f` ch·ªâ ƒë·ªãnh file `.eml` v√† c√°c c·ªù kh√°c (`--headers`, `--digests`, `--links`, `--attachments`) ƒë·ªÉ tr√≠ch xu·∫•t th√¥ng tin kh√°c nhau t·ª´ email. H·ªØu √≠ch cho Blue Team khi ph√¢n t√≠ch email phishing ho·∫∑c email ch·ª©a m√£ ƒë·ªôc ƒë·ªÉ l·∫•y IOC.

![image](https://user-images.githubusercontent.com/100603074/218200574-d9917b8c-433b-4bab-8db0-b6628b0d9424.png)

*Text used from https://github.com/keraattin/EmailAnalyzer*

### [üîô](#tool-list)[**VCG**](https://github.com/nccgroup/VCG)

**VCG** is an automated **code security review tool** that handles **C/C++, Java, C#, VB** and PL/SQL. It has a few features that should hopefully make it useful to anyone conducting code security reviews, particularly where time is at a premium:
**L∆∞u √Ω:** VCG (Vulnerability Code Grep?) l√† c√¥ng c·ª• ph√¢n t√≠ch m√£ ngu·ªìn tƒ©nh t·ª± ƒë·ªông ƒë·ªÉ t√¨m c√°c l·ªó h·ªïng b·∫£o m·∫≠t trong nhi·ªÅu ng√¥n ng·ªØ l·∫≠p tr√¨nh. Blue Team c√≥ th·ªÉ d√πng n√≥ ƒë·ªÉ ki·ªÉm tra m√£ ngu·ªìn c√°c ·ª©ng d·ª•ng n·ªôi b·ªô ho·∫∑c third-party ƒë∆∞·ª£c deploy.

- In addition to performing some more complex checks it also has a config file for each language that basically allows you to add any bad functions (or other text) that you want to search for
- It attempts to find a range of around 20 phrases within comments that can indicate broken code (‚ÄúToDo‚Äù, ‚ÄúFixMe‚Äù, ‚ÄúKludge‚Äù, etc.)
- It provides a nice pie chart (for the entire codebase and for individual files) showing relative proportions of code, whitespace, comments, ‚ÄòToDo‚Äô style comments and bad code
**L∆∞u √Ω:** T√≠nh nƒÉng n·ªïi b·∫≠t bao g·ªìm kh·∫£ nƒÉng t√πy ch·ªânh lu·∫≠t t√¨m ki·∫øm h√†m/text ƒë·ªôc h·∫°i, t√¨m ki·∫øm c√°c comment "Todo" ho·∫∑c "Fixme" (ƒë√¥i khi li√™n quan ƒë·∫øn c√°c v·∫•n ƒë·ªÅ ch∆∞a ƒë∆∞·ª£c gi·∫£i quy·∫øt ho·∫∑c c√°c ch·ªó m√£ y·∫øu) v√† t·∫°o b√°o c√°o tr·ª±c quan.

**Install:**

You can install the pre-compiled binary [t·∫°i ƒë√¢y](https://github.com/nccgroup/VCG).
**L∆∞u √Ω:** T·∫£i file binary ƒë√£ bi√™n d·ªãch s·∫µn.

Open the project .sln, choose "**Release**", and **build**.
**L∆∞u √Ω:** Bi√™n d·ªãch m√£ ngu·ªìn C# b·∫±ng Visual Studio (n·∫øu mu·ªën build t·ª´ source).

**Usage:**

```
STARTUP OPTIONS:
	(Set desired starting point for GUI. If using console mode these options will set target(s) to be scanned.)
	-t, --target <Filename|DirectoryName>:	Set target file or directory. Use this option either to load target immediately into GUI or to provide the target for console mode.
	-l, --language <CPP|PLSQL|JAVA|CS|VB|PHP|COBOL>:	Set target language (Default is C/C++).
	-e, --extensions <ext1|ext2|ext3>:	Set file extensions to be analysed (See ReadMe or Options screen for language-specific defaults).
	-i, --import <Filename>:	Import XML/CSV results to GUI.

OUTPUT OPTIONS:
	(Automagically export results to a file in the specified format. Use XML or CSV output if you wish to reload results into the GUI later on.)
	-x, --export <Filename>:	Automatically export results to XML file.
	-f, --csv-export <Filename>:	Automatically export results to CSV file.
	-r, --results <Filename>:	Automatically export results to flat text file.

CONSOLE OPTIONS:
	-c, --console:		Run application in console only (hide GUI).
	-v, --verbose:		Set console output to verbose mode.
	-h, --help:		Show help.
```
**L∆∞u √Ω:** Output m√†n h√¨nh tr·ª£ gi√∫p c·ªßa VCG, li·ªát k√™ c√°c tham s·ªë d√≤ng l·ªánh cho c·∫£ ch·∫ø ƒë·ªô GUI v√† console.

### [üîô](#tool-list)[**CyberChef**](https://gchq.github.io/CyberChef/)

**CyberChef** is a free, web-based tool that allows users to manipulate and transform data using a wide range of techniques.

With **CyberChef**, you can perform a wide range of operations on data, such as converting between different data formats (e.g., hexadecimal, base64, ASCII), encoding and decoding data, searching and replacing text etc.

The tool also includes a recipe system, which allows you to save and share data manipulation workflows with others.
**L∆∞u √Ω:** CyberChef ƒë∆∞·ª£c v√≠ nh∆∞ "con dao qu√¢n ƒë·ªôi Th·ª•y Sƒ©" cho c√°c c√¥ng t√°c x·ª≠ l√Ω d·ªØ li·ªáu. Blue Team s·ª≠ d·ª•ng n√≥ th∆∞·ªùng xuy√™n trong ph√¢n t√≠ch malware, ph√¢n t√≠ch network traffic, x·ª≠ l√Ω c√°c chu·ªói ƒë·ªôc h·∫°i, decode/encode c√°c ƒë·ªãnh d·∫°ng kh√°c nhau trong qu√° tr√¨nh ƒëi·ªÅu tra s·ª± c·ªë.

The tool can be used from [t·∫°i ƒë√¢y](https://gchq.github.io/CyberChef/).

![image](https://user-images.githubusercontent.com/100603074/223865168-433fcd56-12e9-44a2-83aa-1531d711383d.png)

*Image used from https://gchq.github.io/CyberChef/*

**T√¨nh b√°o ƒêe d·ªça**
====================

*C√°c c√¥ng c·ª• ƒë·ªÉ thu th·∫≠p v√† ph√¢n t√≠ch t√¨nh b√°o v·ªÅ c√°c m·ªëi ƒëe d·ªça hi·ªán t·∫°i v√† m·ªõi n·ªïi, v√† ƒë·ªÉ t·∫°o c·∫£nh b√°o v·ªÅ c√°c m·ªëi ƒëe d·ªça ti·ªÅm ·∫©n.*

### [üîô](#tool-list)[**Maltego**](https://www.maltego.com/solutions/cyber-threat-intelligence/)

**Maltego** is a commercial **threat intelligence and forensics tool** developed by Paterva. It is used by security professionals to gather and analyze information about domains, IP addresses, networks, and individuals in order to identify relationships and connections that might not be immediately apparent.

**Maltego** uses a visual interface to represent data as entities, which can be linked together to form a network of relationships. It includes a range of transforms, which are scripts that can be used to gather data from various sources, such as social media, **DNS** records, and **WHOIS** data.

**Maltego** is often used in conjunction with other security tools, such as SIEMs and vulnerability scanners, as part of a comprehensive **threat intelligence and incident response strategy**.
**L∆∞u √Ω:** Maltego gi√∫p Blue Team v·∫Ω b·∫£n ƒë·ªì m·ªëi li√™n h·ªá gi·ªØa c√°c th·ª±c th·ªÉ (ƒë·ªãa ch·ªâ IP, domain, email, t√™n ng∆∞·ªùi, t·ªï ch·ª©c, file hash...) ƒë·ªÉ hi·ªÉu r√µ h∆°n v·ªÅ k·∫ª t·∫•n c√¥ng, h·∫° t·∫ßng C2, ho·∫∑c m·∫°ng l∆∞·ªõi t·∫•n c√¥ng trong qu√° tr√¨nh ph√¢n t√≠ch s·ª± c·ªë v√† threat hunting.

You can schedule a demo [t·∫°i ƒë√¢y](https://www.maltego.com/get-a-demo/).

[Maltego handbook Handbook for Cyber Threat Intelligence](https://static.maltego.com/cdn/Handbooks/Maltego-Handbook-for-Cyber-Threat-Intelligence.pdf)

![image](https://user-images.githubusercontent.com/100603074/210655712-e1409206-de1d-4601-88a5-f5a6ac3928c7.png)

*Image used from https://www.maltego.com/reduce-your-cyber-security-risk-with-maltego/*

### [üîô](#tool-list)[**MISP**](https://www.misp-project.org/)

**MISP** (short for **Malware Information Sharing Platform**) is an open-source platform for sharing, storing, and correlating **Indicators of Compromise (IOCs)** of targeted attacks, threats, and malicious activity.
**L∆∞u √Ω:** MISP l√† n·ªÅn t·∫£ng chia s·∫ª v√† qu·∫£n l√Ω th√¥ng tin t√¨nh b√°o ƒëe d·ªça (Threat Intelligence Platform - TIP). N√≥ cho ph√©p Blue Team nh·∫≠p, xu·∫•t, chia s·∫ª (v·ªõi c·ªông ƒë·ªìng ho·∫∑c nh√≥m ri√™ng), v√† t·ª± ƒë·ªông t∆∞∆°ng quan (correlation) c√°c IoC nh∆∞ hash file, ƒë·ªãa ch·ªâ IP, domain, email address...

**MISP** includes a range of features, such as real-time sharing of **IOCs**, support for multiple formats, and the ability to import and export data to and from other tools.

It also provides a RESTful API and various data models to facilitate the integration of **MISP** with other security systems. In addition to its use as a **threat intelligence platform, MISP** is also used for **incident response, forensic analysis, and malware research**.
**L∆∞u √Ω:** Vi·ªác t√≠ch h·ª£p MISP v·ªõi SIEM, EDR, firewall gi√∫p t·ª± ƒë·ªông ch·∫∑n c√°c IoC ho·∫∑c t·∫°o c·∫£nh b√°o khi c√°c IoC n√†y xu·∫•t hi·ªán trong log h·ªá th·ªëng.

**Install:**

```bash
# Kali
wget -O /tmp/misp-kali.sh https://raw.githubusercontent.com/MISP/MISP/2.4/INSTALL/INSTALL.sh && bash /tmp/misp-kali.sh

# Ubuntu 20.04.2.0-server
wget -O /tmp/INSTALL.sh https://raw.githubusercontent.com/MISP/MISP/2.4/INSTALL/INSTALL.sh
bash /tmp/INSTALL.sh
```
**L∆∞u √Ω:** C√°c l·ªánh c√†i ƒë·∫∑t MISP tr√™n h·ªá th·ªëng Linux (Kali ho·∫∑c Ubuntu) b·∫±ng c√°ch t·∫£i v√† ch·∫°y script c√†i ƒë·∫∑t ch√≠nh th·ª©c. Vi·ªác c√†i ƒë·∫∑t MISP kh√° ph·ª©c t·∫°p, th∆∞·ªùng c·∫ßn c·∫•u h√¨nh database v√† web server.

Full installation instructions can be found [t·∫°i ƒë√¢y](https://misp.github.io/MISP/).

**Usage:**

**MISP** documentation can be found [t·∫°i ƒë√¢y](https://www.misp-project.org/documentation/).

[H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng MISP](https://github.com/MISP/misp-book)

[**MISP** Training Cheat sheet](https://www.misp-project.org/misp-training/cheatsheet.pdf)

![image](https://user-images.githubusercontent.com/100603074/210655743-b7fd5ab0-a106-4277-815d-c674525a9a91.png)

*Image used from http://www.concordia-h2020.eu/blog-post/integration-of-misp-into-flowmon-ads/*

### [üîô](#tool-list)[**ThreatConnect**](https://threatconnect.com/threat-intelligence-platform/)

**ThreatConnect** is a **threat intelligence platform** that helps organizations aggregate, analyze, and act on threat data. It is designed to provide a single, unified view of an organization's threat landscape and enable users to collaborate and share information about threats.
**L∆∞u √Ω:** ThreatConnect l√† m·ªôt n·ªÅn t·∫£ng TIP th∆∞∆°ng m·∫°i t∆∞∆°ng t·ª± MISP, gi√∫p t·ªïng h·ª£p, ph√¢n t√≠ch v√† chia s·∫ª th√¥ng tin t√¨nh b√°o v·ªÅ ƒëe d·ªça, h·ªó tr·ª£ ph·ªëi h·ª£p ·ª©ng ph√≥.

The platform includes a range of features for collecting, analyzing, and disseminating threat intelligence, such as a customizable dashboard, integration with third-party data sources, and the ability to create custom reports and alerts.

It is intended to help organizations improve their security posture by providing them with the information they need to identify, prioritize, and respond to potential threats.
**L∆∞u √Ω:** Vi·ªác t√≠ch h·ª£p nhi·ªÅu ngu·ªìn threat intelligence kh√°c nhau (feed c√¥ng khai, th∆∞∆°ng m·∫°i, chia s·∫ª t·ª´ c·ªông ƒë·ªìng) v√† kh·∫£ nƒÉng t·∫°o c√°c workflow ph√¢n t√≠ch/ph·∫£n ·ª©ng l√† ƒëi·ªÉm m·∫°nh c·ªßa c√°c n·ªÅn t·∫£ng TIP nh∆∞ ThreatConnect.

You can request a demo from [t·∫°i ƒë√¢y](https://threatconnect.com/request-a-demo/).

[**ThreatConnect** for Threat Intel Analysts - PDF](https://threatconnect.com/wp-content/uploads/2022/12/Intel-Analysts-Datasheet.pdf)

![image](https://user-images.githubusercontent.com/100603074/210655770-4413ead0-6216-47fe-a933-cbe0be9f86a1.png)

*Image used from https://threatconnect.com/threat-intelligence-platform/*

### [üîô](#tool-list)[**Adversary Emulation Library**](https://github.com/center-for-threat-informed-defense/adversary_emulation_library)

This is a library of adversary emulation plans to enable you to evaluate your defensive capabilities against real-world threats.

Emulation plans are an essential component for organizations looking to prioritize defenses against behavior from specific threats.
**L∆∞u √Ω:** Th∆∞ vi·ªán n√†y kh√¥ng ph·∫£i l√† ph·∫ßn m·ªÅm hay c√¥ng c·ª• th·ª±c thi, m√† l√† b·ªô t√†i li·ªáu (k·∫ø ho·∫°ch chi ti·∫øt) ƒë·ªÉ Blue Team (ho·∫∑c Purple Team) c√≥ th·ªÉ m√¥ ph·ªèng l·∫°i c√°c TTP c·ªßa c√°c nh√≥m t·∫•n c√¥ng th·ª±c t·∫ø ƒë√£ bi·∫øt (Adversary Emulation) ƒë·ªÉ ki·ªÉm tra hi·ªáu qu·∫£ c·ªßa c√°c bi·ªán ph√°p ph√≤ng v·ªá hi·ªán c√≥.

The TTPs outlined in this resource can be used to design specific threat emulation activities to test your organisations defenses against specific threat actors.
**L∆∞u √Ω:** Blue Team s·ª≠ d·ª•ng c√°c k·∫ø ho·∫°ch trong th∆∞ vi·ªán n√†y ƒë·ªÉ hi·ªÉu s√¢u h∆°n v·ªÅ c√°c k·ªπ thu·∫≠t (TTP) m√† c√°c nh√≥m t·∫•n c√¥ng n·ªïi ti·∫øng s·ª≠ d·ª•ng v√† t√°i t·∫°o ch√∫ng trong m√¥i tr∆∞·ªùng test ƒë·ªÉ xem h·ªá th·ªëng gi√°m s√°t/ph√≤ng th·ªß c√≥ ph√°t hi·ªán ho·∫∑c ngƒÉn ch·∫∑n ƒë∆∞·ª£c kh√¥ng.

Visit the resource [t·∫°i ƒë√¢y](https://github.com/center-for-threat-informed-defense/adversary_emulation_library).

**Example (sandworm)**

- [M√£ ngu·ªìn Ph·∫ßn m·ªÅm M√¥ ph·ªèng Sandworm](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/sandworm/Resources)
- [H∆∞·ªõng d·∫´n Chi ti·∫øt K·ªãch b·∫£n Ph√°t hi·ªán Sandworm](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/sandworm/Emulation_Plan/Scenario_1)
- [T√≥m t·∫Øt Th√¥ng tin T√¨nh b√°o Sandworm](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/sandworm/Intelligence_Summary/Intelligence_Summary.md)
**L∆∞u √Ω:** C√°c v√≠ d·ª• c·ª• th·ªÉ cho m·ªôt nh√≥m t·∫•n c√¥ng (Sandworm), cung c·∫•p m√£ ngu·ªìn c√¥ng c·ª• ƒë·ªÉ th·ª±c thi m√¥ ph·ªèng, h∆∞·ªõng d·∫´n c√°ch thi·∫øt l·∫≠p m√¥i tr∆∞·ªùng test, th·ª±c hi·ªán c√°c b∆∞·ªõc m√¥ ph·ªèng, v√† c√°ch ki·ªÉm tra xem c√°c gi·∫£i ph√°p b·∫£o m·∫≠t c√≥ ph√°t hi·ªán ƒë∆∞·ª£c hay kh√¥ng. R·∫•t chi ti·∫øt v√† th·ª±c t·∫ø cho vi·ªác n√¢ng cao kh·∫£ nƒÉng ph√≤ng th·ªß d·ª±a tr√™n threat intelligence.

![image](https://user-images.githubusercontent.com/100603074/223865356-c4d491c3-edba-40d6-80b2-5c41029bddfd.png)

*Image used from https://github.com/center-for-threat-informed-defense/adversary_emulation_library*

**L·∫≠p k·∫ø ho·∫°ch ·ª®ng ph√≥ S·ª± c·ªë**
====================

*C√°c c√¥ng c·ª• ƒë·ªÉ t·∫°o v√† duy tr√¨ k·∫ø ho·∫°ch ·ª©ng ph√≥ s·ª± c·ªë, bao g·ªìm c√°c m·∫´u v√† c√°c th·ª±c h√†nh t·ªët nh·∫•t ƒë·ªÉ ·ª©ng ph√≥ v·ªõi c√°c lo·∫°i s·ª± c·ªë kh√°c nhau.*

### [üîô](#tool-list)[**NIST**](https://www.nist.gov/cyberframework)

The **NIST Cybersecurity Framework (CSF)** is a framework developed by the **National Institute of Standards and Technology (NIST)** to help organizations manage cybersecurity risks. It provides a set of guidelines, best practices, and standards for implementing and maintaining a robust cybersecurity program.
**L∆∞u √Ω:** Khung NIST CSF l√† m·ªôt t√†i li·ªáu tham kh·∫£o quan tr·ªçng cho Blue Team ƒë·ªÉ x√¢y d·ª±ng m·ªôt ch∆∞∆°ng tr√¨nh b·∫£o m·∫≠t to√†n di·ªán, kh√¥ng ch·ªâ ri√™ng ·ª©ng ph√≥ s·ª± c·ªë m√† c√≤n c·∫£ nh·∫≠n di·ªán, b·∫£o v·ªá, ph√°t hi·ªán v√† ph·ª•c h·ªìi.

The framework is organized around five core functions: Identify, Protect, Detect, Respond, and Recover. These functions provide a structure for understanding and addressing the various components of cybersecurity risk.

The **CSF** is designed to be flexible and adaptable, and it can be customized to fit the specific needs and goals of an organization. It is intended to be used as a tool for improving an organization's cybersecurity posture and for helping organizations better understand and manage their cybersecurity risks.

**Useful Links:**

[H∆∞·ªõng d·∫´n Kh·ªüi ƒë·ªông Nhanh NIST](https://csrc.nist.gov/Projects/cybersecurity-framework/nist-cybersecurity-framework-a-quick-start-guide)

[Khung c·∫£i thi·ªán an ninh m·∫°ng cho h·∫° t·∫ßng tr·ªçng y·∫øu](https://nvlpubs.nist.gov/nistpubs/CSWP/NIST.CSWP.04162018.pdf)

[·ª®ng ph√≥ v·ªõi r√≤ r·ªâ d·ªØ li·ªáu: H∆∞·ªõng d·∫´n cho doanh nghi·ªáp](https://www.ftc.gov/business-guidance/resources/data-breach-response-guide-business)

[S·ª± ki·ªán v√† Thuy·∫øt tr√¨nh c·ªßa NIST](https://www.nist.gov/cyberframework/events-and-presentations)

[Twitter - @NISTcyber](https://www.twitter.com/NISTcyber)

![image](https://user-images.githubusercontent.com/100603074/210655795-f809707f-fb3e-4df9-b07d-c4fa0392f020.png)

*Image used from https://www.dell.com/en-us/blog/strengthen-security-of-your-data-center-with-the-nist-cybersecurity-framework/*

### [üîô](#tool-list)K·∫ø ho·∫°ch ·ª®ng ph√≥ S·ª± c·ªë

An incident response plan is a set of procedures that a company puts in place to manage and mitigate the impact of a security incident, such as a data breach or a cyber attack.
**L∆∞u √Ω:** K·∫ø ho·∫°ch ·ª©ng ph√≥ s·ª± c·ªë (IR plan) l√† t√†i li·ªáu quan tr·ªçng v·∫°ch ra c√°c b∆∞·ªõc, vai tr√≤, tr√°ch nhi·ªám v√† quy tr√¨nh c·∫ßn th·ª±c hi·ªán khi m·ªôt s·ª± c·ªë b·∫£o m·∫≠t x·∫£y ra.

The theory behind an **incident response plan** is that it helps a company to be prepared for and respond effectively to a security incident, which can minimize the damage and reduce the chances of it happening again in the future.

There are several reasons why businesses need an **incident response plan**:

1. **To minimize the impact of a security incident:** An **incident response plan** helps a company to identify and address the source of a security incident as quickly as possible, which can help to minimize the damage and reduce the chances of it spreading.

2. **To meet regulatory requirements:** Many industries have regulations that require companies to have an **incident response plan** in place. For example, the Payment Card Industry Data Security Standard (**PCI DSS**) requires merchants and other organizations that accept credit cards to have an **incident response plan**.

3. **To protect reputation:** A security incident can damage a company's reputation, which can lead to a loss of customers and revenue. An **incident response plan** can help a company to manage the situation and minimize the damage to its reputation.

4. **To reduce the cost of a security incident:** The cost of a security incident can be significant, including the cost of remediation, legal fees, and lost business. An **incident response plan** can help a company to minimize these costs by providing a roadmap for responding to the incident.
**L∆∞u √Ω:** Blue Team c·∫ßn x√¢y d·ª±ng, th·ª±c h√†nh v√† c·∫≠p nh·∫≠t th∆∞·ªùng xuy√™n k·∫ø ho·∫°ch n√†y.

**Useful Links:**

[National Cyber Security Centre - T·ªïng quan ·ª®ng ph√≥ S·ª± c·ªë](https://www.ncsc.gov.uk/collection/incident-management/incident-response)

[SANS - M·∫´u Ch√≠nh s√°ch B·∫£o m·∫≠t](https://www.sans.org/information-security-policy/)

[SANS - S·ªï tay X·ª≠ l√Ω S·ª± c·ªë](https://www.sans.org/white-papers/33901/)

[FRSecure - M·∫´u K·∫ø ho·∫°ch ·ª®ng ph√≥ S·ª± c·ªë](https://frsecure.com/incident-response-plan-template/)

[C∆° quan An ninh m·∫°ng v√† H·∫° t·∫ßng (CISA) - ·ª®NG PH√ì S·ª∞ C·ªê CYBER](https://www.cisa.gov/cyber-incident-response)

[FBI - Ch√≠nh s√°ch ·ª®ng ph√≥ S·ª± c·ªë](https://www.fbi.gov/file-repository/incident-response-policy.pdf/view)

![image](https://user-images.githubusercontent.com/100603074/210656422-d75791ae-797b-4135-bbd5-8b84335892ba.png)

*Image used from https://www.ncsc.gov.uk/collection/incident-management/incident-response*

### [üîô](#tool-list)K·∫ø ho·∫°ch ·ª®ng ph√≥ Ransomware

Ransomware is a type of malicious software that encrypts a victim's files. The attackers then demand a ransom from the victim to restore access to the files; hence the name ransomware.
**L∆∞u √Ω:** T·∫•n c√¥ng ransomware ƒë√£ tr·ªü n√™n r·∫•t ph·ªï bi·∫øn v√† g√¢y thi·ªát h·∫°i n·∫∑ng n·ªÅ, do ƒë√≥ vi·ªác c√≥ m·ªôt k·∫ø ho·∫°ch ·ª©ng ph√≥ chuy√™n bi·ªát l√† c·∫ßn thi·∫øt.

The theory behind a ransomware response plan is that it helps a company to be prepared for and respond effectively to a ransomware attack, which can minimize the impact of the attack and reduce the chances of it happening again in the future.

There are several reasons why businesses need a **ransomware response plan**:

1. **To minimize the impact of a ransomware attack:** A **ransomware response plan** helps a company to identify and address a ransomware attack as quickly as possible, which can help to minimize the damage and reduce the chances of the ransomware spreading to other systems.

2. **To protect against data loss:** Ransomware attacks can result in the loss of important data, which can be costly and disruptive for a business. A **ransomware response plan** can help a company to recover from an attack and avoid data loss.

3. **To protect reputation:** A ransomware attack can damage a company's reputation, which can lead to a loss of customers and revenue. A **ransomware response plan** can help a company to manage the situation and minimize the damage to its reputation.

4. **To reduce the cost of a ransomware attack:** The cost of a ransomware attack can be significant, including the cost of remediation, legal fees, and lost business. A **ransomware response plan** can help a company to minimize these costs by providing a roadmap for responding to the attack.
**L∆∞u √Ω:** K·∫ø ho·∫°ch n√†y b·ªï sung cho k·∫ø ho·∫°ch IR chung, t·∫≠p trung v√†o c√°c b∆∞·ªõc ƒë·∫∑c th√π c·ªßa t·∫•n c√¥ng ransomware (v√≠ d·ª•: c√°ch ly h·ªá th·ªëng, sao l∆∞u, li√™n h·ªá ph√°p l√Ω, th√¥ng b√°o...).

**Useful Links:**

[National Cyber Security Centre - Gi·∫£m thi·ªÉu t·∫•n c√¥ng malware v√† ransomware](https://www.ncsc.gov.uk/guidance/mitigating-malware-and-ransomware-attacks)

[NIST - B·∫£o v·ªá v√† ·ª®ng ph√≥ Ransomware](https://csrc.nist.gov/Projects/ransomware-protection-and-response)

[C∆° quan An ninh m·∫°ng v√† H·∫° t·∫ßng (CISA) - H∆∞·ªõng d·∫´n Ransomware](https://www.cisa.gov/stopransomware/ransomware-guide)

[Microsoft Security - ·ª®ng ph√≥ Ransomware](https://www.microsoft.com/en-us/security/blog/2019/12/16/ransomware-response-to-pay-or-not-to-pay/)

[Blog - X√¢y d·ª±ng K·∫ø ho·∫°ch ·ª®ng ph√≥ Ransomware](https://www.msp360.com/resources/blog/designing-a-ransomware-response-plan/)

![image](https://user-images.githubusercontent.com/100603074/210655863-d4044516-022a-4f6b-afaa-cf375c1f01b4.png)

*Image used from https://csrc.nist.gov/Projects/ransomware-protection-and-response*

### [üîô](#tool-list)H∆∞·ªõng d·∫´n Tham kh·∫£o ·ª®ng ph√≥ S·ª± c·ªë

This is a ‚Äúfirst aid‚Äù style of guidance for cybersecurity to help you prepare for a crisis and limit the potential damage in a crisis.
**L∆∞u √Ω:** T√†i li·ªáu n√†y l√† m·ªôt b·∫£n t√≥m t·∫Øt h∆∞·ªõng d·∫´n nhanh, gi·ªëng nh∆∞ "s·ªï tay c·∫•p c·ª©u" cho s·ª± c·ªë b·∫£o m·∫≠t l·ªõn.

This includes tips and guidance for technical, operational, legal, and communications aspects of a major cybersecurity incident.

**Key Takeaways**

- **Preparation pays off** ‚Äì Preparing for a major incident can reduce damage to the organization, as well as reduce incident cost and management difficulty.
- **Operationalize your incident management processes** ‚Äì Managing major cybersecurity incidents must be part of standard business risk management processes.
- **Coordination is critical** ‚Äì Effective cybersecurity incident management requires collaboration and coordination of technical, operations, communications, legal, and governance functions.
- **Stay calm and do no harm in an incident** ‚Äì Overreacting can be as damaging as underreacting.
**L∆∞u √Ω:** C√°c ƒëi·ªÉm c·ªët l√µi n√†y nh·∫•n m·∫°nh t·∫ßm quan tr·ªçng c·ªßa vi·ªác chu·∫©n b·ªã, ph·ªëi h·ª£p gi·ªØa c√°c b·ªô ph·∫≠n v√† s·ª± b√¨nh tƒ©nh khi x·ª≠ l√Ω s·ª± c·ªë.

You can read the paper [t·∫°i ƒë√¢y](https://info.microsoft.com/rs/157-GQE-382/images/EN-US-CNTNT-emergency-doc-digital.pdf).

![image](https://user-images.githubusercontent.com/100603074/223865803-a026ad87-00dd-4458-bf17-416a091566dd.png)

*Image used from https://info.microsoft.com/rs/157-GQE-382/images/EN-US-CNTNT-emergency-doc-digital.pdf*

### [üîô](#tool-list)[**Awesome Incident Response**](https://github.com/meirwah/awesome-incident-response)

A curated list of tools and resources for **security incident response**, aimed to help security analysts and [DFIR](https://www.acronymfinder.com/Digital-Forensics%2c-Incident-Response-%28DFIR%29.html) teams.
**L∆∞u √Ω:** "Awesome" trong t√™n c√°c repo GitHub th∆∞·ªùng c√≥ nghƒ©a l√† danh s√°ch tuy·ªÉn ch·ªçn c√°c t√†i nguy√™n t·ªët v·ªÅ m·ªôt ch·ªß ƒë·ªÅ c·ª• th·ªÉ. Repo n√†y l√† danh s√°ch t·ªïng h·ª£p nhi·ªÅu c√¥ng c·ª• v√† t√†i li·ªáu kh√°c nhau li√™n quan ƒë·∫øn ·ª©ng ph√≥ s·ª± c·ªë v√† ph√°p y k·ªπ thu·∫≠t s·ªë (DFIR).

This is a great resource full of links for different aspects of **incident response**, including:

- Adversary Emulation
- All-In-One Tools
- Books
- Communities
- Disk Image Creation Tools
**L∆∞u √Ω:** Danh s√°ch ph√¢n lo·∫°i c√°c c√¥ng c·ª• v√† t√†i nguy√™n theo c√°c lƒ©nh v·ª±c kh√°c nhau c·ªßa IR/DFIR. R·∫•t h·ªØu √≠ch ƒë·ªÉ t√¨m ki·∫øm tool cho m·ªôt nhi·ªám v·ª• c·ª• th·ªÉ.

Visit the resource [t·∫°i ƒë√¢y](https://github.com/meirwah/awesome-incident-response).

![image](https://user-images.githubusercontent.com/100603074/223865479-b54a2f98-0c2c-4bf1-8072-58ea7bfe4fb0.png)

*Image used from https://github.com/meirwah/awesome-incident-response*

**Ph√°t hi·ªán v√† Ph√¢n t√≠ch Malware**
====================

*C√°c c√¥ng c·ª• ƒë·ªÉ ph√°t hi·ªán v√† ph√¢n t√≠ch **malware**, bao g·ªìm ph·∫ßn m·ªÅm **antivirus** v√† c√¥ng c·ª• ph√¢n t√≠ch ph√°p y.*

### [üîô](#tool-list)[**VirusTotal**](https://www.virustotal.com/gui/home/search)

**VirusTotal** is a website and cloud-based tool that analyzes and scans files, URLs, and software for viruses, worms, and other types of **malware**.
**L∆∞u √Ω:** VirusTotal l√† m·ªôt d·ªãch v·ª• tr·ª±c tuy·∫øn r·∫•t n·ªïi ti·∫øng ƒë·ªÉ ki·ªÉm tra m·ªôt file ho·∫∑c URL c√≥ ph·∫£i l√† ƒë·ªôc h·∫°i kh√¥ng, b·∫±ng c√°ch ch·∫°y n√≥ qua nhi·ªÅu b·ªô m√°y AV kh√°c nhau v√† cung c·∫•p k·∫øt qu·∫£.

When a file, URL, or software is submitted to **VirusTotal**, the tool uses various **antivirus** engines and other tools to scan and analyze it for **malware**. It then provides a report with the results of the analysis, which can help security professionals and blue teams identify and respond to potential threats.

**VirusTotal** can also be used to check the reputation of a file or URL, and to monitor for malicious activity on a network.
**L∆∞u √Ω:** Ngo√†i qu√©t, VirusTotal c√≤n t·ªïng h·ª£p th√¥ng tin t·ª´ nhi·ªÅu ngu·ªìn (ch·ªØ k√Ω AV, sandbox analysis, c·ªông ƒë·ªìng) ƒë·ªÉ ƒë∆∞a ra ƒë√°nh gi√° r·ªßi ro v√† c√°c th√¥ng tin li√™n quan (giao ti·∫øp C2, dropped file,...). Blue Team d√πng n√≥ ƒë·ªÉ ph√¢n lo·∫°i sample, t√¨m ki·∫øm IoC.

Visit [https://www.virustotal.com/gui/home/search](https://www.virustotal.com/gui/home/search)

**Usage:**

```bash
# C√°c t√†i li·ªáu m·ªõi ƒë∆∞·ª£c t·∫°o c√≥ nh√∫ng macro, ƒë∆∞·ª£c √≠t nh·∫•t 5 AV ph√°t hi·ªán
(type:doc OR type: docx) tag:macros p:5+ generated:30d+

# T·ªáp Excel ƒëi k√®m v·ªõi script powershell v√† ƒë∆∞·ª£c t·∫£i l√™n VT trong 10 ng√†y qua
(type:xls OR type:xlsx) tag:powershell fs:10d+

# Payload exploit ki·ªÉu Follina
entity:file magic:"HTML document text" tag:powershell have:itw_url

# C√°c URL li√™n quan ƒë·∫øn domain/subdomain cha c·ª• th·ªÉ v·ªõi m·ªôt header nh·∫•t ƒë·ªãnh trong ph·∫£n h·ªìi
entity:url header_value:"Apache/2.4.41 (Ubuntu)" parent_domain:domain.org

# C√°c URL ƒë√°ng ng·ªù v·ªõi title HTML c·ª• th·ªÉ
entity:url ( title:"XY Company" or title:"X.Y. Company" or title:"XYCompany" ) p:5+
```
**L∆∞u √Ω:** C√°c v√≠ d·ª• n√†y l√† c√∫ ph√°p t√¨m ki·∫øm n√¢ng cao trong **VirusTotal Intelligence** (d·ªãch v·ª• tr·∫£ ph√≠) ho·∫∑c VirusTotal Graph. Ch√∫ng cho ph√©p Blue Team t√¨m ki·∫øm c√°c file ho·∫∑c URL ph√π h·ª£p v·ªõi c√°c ti√™u ch√≠ ph·ª©c t·∫°p (lo·∫°i file, tag, s·ªë l∆∞·ª£ng ph√°t hi·ªán, ng√†y t·∫£i l√™n, n·ªôi dung, header response...), r·∫•t m·∫°nh cho threat hunting v√† ph√¢n t√≠ch c√°c chi·∫øn d·ªãch t·∫•n c√¥ng c·ª• th·ªÉ.

Full documentation can be found [t·∫°i ƒë√¢y](https://support.virustotal.com/hc/en-us/categories/360000162878-Documentation).

[VT INTELLIGENCE CHEAT SHEET](https://storage.googleapis.com/vtpublic/reports/VTI%20Cheatsheet.pdf)

![image](https://user-images.githubusercontent.com/100603074/210655958-9a39783e-637e-46a3-a80c-4c64b389de60.png)

*Image used from https://www.virustotal.com/gui/home/search*

### [üîô](#tool-list)[**IDA**](https://hex-rays.com/ida-free/)

**IDA** (Interactive Disassembler) is a powerful tool used to reverse engineer and analyze compiled and executable code.

It can be used to examine the inner workings of software, including malware, and to understand how it functions. **IDA** allows users to disassemble code, decompile it into a higher-level programming language, and view and edit the resulting source code. This can be useful for identifying vulnerabilities, analyzing malware, and understanding how a program works.

**IDA** can also be used to generate graphs and charts that visualize the structure and flow of code, which can make it easier to understand and analyze.
**L∆∞u √Ω:** IDA l√† m·ªôt trong nh·ªØng tr√¨nh d·ªãch ng∆∞·ª£c v√† g·ª° l·ªói m·∫°nh nh·∫•t v√† ƒë·∫Øt ti·ªÅn nh·∫•t. C√°c nh√† ph√¢n t√≠ch malware (Blue Team chuy√™n s√¢u) s·ª≠ d·ª•ng n√≥ ƒë·ªÉ hi·ªÉu c√°ch ho·∫°t ƒë·ªông c·ªßa malware ·ªü m·ª©c m√£ m√°y/m√£ assembly v√† m√£ gi·∫£ (pseudocode).

**Install:**

Download IDA from [t·∫°i ƒë√¢y](https://hex-rays.com/ida-free/#download).
**L∆∞u √Ω:** C√≥ phi√™n b·∫£n mi·ªÖn ph√≠ (IDA Free) nh∆∞ng b·ªã gi·ªõi h·∫°n t√≠nh nƒÉng v√† ki·∫øn tr√∫c h·ªó tr·ª£ so v·ªõi phi√™n b·∫£n th∆∞∆°ng m·∫°i.

**Usage:**

[**IDA** Practical Cheatsheet](https://github.com/AdamTaguirov/IDA-practical-cheatsheet)

[**IDAPython** cheatsheet](https://gist.github.com/icecr4ck/7a7af3277787c794c66965517199fc9c)
**L∆∞u √Ω:** IDAPython cho ph√©p script h√≥a c√°c t√°c v·ª• trong IDA.

[**IDA Pro** Cheatsheet](https://hex-rays.com/products/ida/support/freefiles/IDA_Pro_Shortcuts.pdf)

![image](https://user-images.githubusercontent.com/100603074/210655977-e52a66eb-7698-4769-b002-a9d6f1503b85.png)

*Image used from https://www.newton.com.tw/wiki/IDA%20Pro*

### [üîô](#tool-list)[**Ghidra**](https://ghidra-sre.org/)

**Ghidra** is a free, open-source software reverse engineering tool developed by the **National Security Agency (NSA)**. It is used to analyze compiled and executable code, including malware.
**L∆∞u √Ω:** Ghidra l√† m·ªôt gi·∫£i ph√°p thay th·∫ø m√£ ngu·ªìn m·ªü mi·ªÖn ph√≠ r·∫•t m·∫°nh m·∫Ω cho IDA, do NSA ph√°t tri·ªÉn v√† ph√°t h√†nh c√¥ng khai.

**Ghidra** allows users to disassemble code, decompile it into a higher-level programming language, and view and edit the resulting source code. This can be useful for identifying vulnerabilities, analyzing malware, and understanding how a program works.

**Ghidra** also includes a range of features and tools that support SRE tasks, such as debugging, code graphing, and data visualization. **Ghidra** is written in Java and is available for Windows, MacOS, and Linux.
**L∆∞u √Ω:** Ghidra h·ªó tr·ª£ nhi·ªÅu ki·∫øn tr√∫c x·ª≠ l√Ω v√† c√≥ m·ªôt m√¥i tr∆∞·ªùng ƒë·ªì h·ªça to√†n di·ªán cho ph√©p ph√¢n t√≠ch binary (ng∆∞·ª£c d·ªãch, g·ª° l·ªói, v·∫Ω ƒë·ªì th·ªã lu·ªìng ƒëi·ªÅu khi·ªÉn). N√≥ r·∫•t ph·ªï bi·∫øn v·ªõi c√°c nh√† ph√¢n t√≠ch malware do t√≠nh mi·ªÖn ph√≠ v√† kh·∫£ nƒÉng.

**Install:**

1. Download the latest release from [t·∫°i ƒë√¢y](https://github.com/NationalSecurityAgency/ghidra/releases).
2. Extract the zip
**L∆∞u √Ω:** Ch·ªâ c·∫ßn t·∫£i t·ªáp zip v√† gi·∫£i n√©n, Ghidra ch·∫°y b·∫±ng Java n√™n kh√¥ng c·∫ßn c√†i ƒë·∫∑t ph·ª©c t·∫°p (ngo√†i JRE).

Full installation and error fix information can be found [t·∫°i ƒë√¢y](https://ghidra-sre.org/InstallationGuide.html#Install).

**Usage:**

1. Navigate to the unzipped folder

```bash
# Windows
ghidraRun.bat

# Linux
./ghidraRun
```
**L∆∞u √Ω:** Ch·∫°y script ƒë·ªÉ kh·ªüi ƒë·ªông Ghidra tr√™n c√°c h·ªá ƒëi·ªÅu h√†nh.

If **Ghidra** failed to launch, see the [Troubleshooting](https://ghidra-sre.org/InstallationGuide.html#Troubleshooting) link.

![image](https://user-images.githubusercontent.com/100603074/210656000-9b31d5fc-7b95-447e-94ed-94aef602de46.png)

*Image used from https://www.malwaretech.com/2019/03/video-first-look-at-ghidra-nsa-reverse-engineering-tool.html*

### [üîô](#tool-list)[**decode-vbe**](https://github.com/DidierStevens/DidierStevensSuite/blob/master/decode-vbe.py)

Script Encoding was introduced by **Microsoft** (long ago) to prevent people from being able to read, understand and alter **VBScript** files.

Encoded scripts are unreadable but still able to execute, making it a popular mechanism with threat actors looking to hide their malicious code, IOCs, hardcoded **C2** domains etc whilst still being able to achieve execution.
**L∆∞u √Ω:** VBScript Encoding (d·∫°ng `.vbe` file) l√† m·ªôt k·ªπ thu·∫≠t c≈© nh∆∞ng v·∫´n ƒë√¥i khi ƒë∆∞·ª£c d√πng ƒë·ªÉ che gi·∫•u m√£ ngu·ªìn VBScript ƒë·ªôc h·∫°i. C√°c file `.vbe` kh√≥ ƒë·ªçc tr·ª±c ti·∫øp.

The **decode-vbe script** can be used to convert encoded **VBE files** back to plaintext for analysis.
**L∆∞u √Ω:** Script n√†y l√† m·ªôt c√¥ng c·ª• nh·ªè nh∆∞ng r·∫•t h·ªØu √≠ch cho c√°c nh√† ph√¢n t√≠ch **malware** khi g·∫∑p c√°c m·∫´u `.vbe` ƒë∆∞·ª£c m√£ h√≥a, cho ph√©p h·ªç l·∫•y ƒë∆∞·ª£c m√£ ngu·ªìn g·ªëc ƒë·ªÉ hi·ªÉu ch·ª©c nƒÉng ƒë·ªôc h·∫°i.

Nice blog about VBE files [t·∫°i ƒë√¢y](https://bromiley.medium.com/malware-monday-vbscript-and-vbe-files-292252c1a16).

**Install:**

```bash
git clone https://github.com/DidierStevens/DidierStevensSuite/
cd DidierStevensSuite
```
**L∆∞u √Ω:** Clone repository ch·ª©a b·ªô script c·ªßa Didier Stevens, **decode-vbe.py** l√† m·ªôt ph·∫ßn trong b·ªô n√†y.

**Usage:**

```bash
# Decode chu·ªói k√Ω t·ª±
decode-vbe.py "##@~^DgAAAA==\ko$K6,JCV^GJqAQAAA==^#~@"

# Decode h·ªá th·∫≠p l·ª•c ph√¢n (prefix #h#)
decode-vbe.py #h#23407E5E4467414141413D3D5C6B6F244B362C4A437F565E474A7141514141413D3D5E237E40

# Decode base64 (prefix #b#)
decode-vbe.py #b#I0B+XkRnQUFBQT09XGtvJEs2LEpDf1ZeR0pxQVFBQUE9PV4jfkA=
```
**L∆∞u √Ω:** V√≠ d·ª• c√°ch ch·∫°y script **decode-vbe.py** v·ªõi c√°c lo·∫°i input kh√°c nhau: chu·ªói VBE m√£ h√≥a tr·ª±c ti·∫øp, chu·ªói hex, chu·ªói base64. Script t·ª± nh·∫≠n d·∫°ng ƒë·ªãnh d·∫°ng n·∫øu c√≥ prefix t∆∞∆°ng ·ª©ng.

### [üîô](#tool-list)[**pafish**](https://github.com/a0rtega/pafish)

**Pafish** is a testing tool that uses different techniques to detect virtual machines and malware analysis environments in the same way that **malware families** do.
**L∆∞u √Ω:** Nhi·ªÅu lo·∫°i malware hi·ªán ƒë·∫°i c√≥ c∆° ch·∫ø ki·ªÉm tra m√¥i tr∆∞·ªùng ch·∫°y ƒë·ªÉ ph√°t hi·ªán xem ch√∫ng ƒëang ·ªü trong sandbox, m√°y ·∫£o, ho·∫∑c b·ªã g·ª° l·ªói. N·∫øu ph√°t hi·ªán, malware c√≥ th·ªÉ kh√¥ng th·ª±c thi ch·ª©c nƒÉng ƒë·ªôc h·∫°i ƒë·ªÉ tr√°nh b·ªã ph√¢n t√≠ch.

The project is free and open source; the code of all the anti-analysis techniques is publicly available. **Pafish executables** for Windows (**x86** 32-bit and 64-bit) can be downloaded from the [releases page](https://github.com/a0rtega/pafish/releases).

**Install (Build):**

**Pafish** is written in C and can be built with **Mingw-w64** and make.
**L∆∞u √Ω:** Y√™u c·∫ßu c√°c c√¥ng c·ª• build C.

The wiki page "[C√°ch Build](https://github.com/a0rtega/pafish/wiki/How-to-build)" contains detailed instructions.

**Usage:**

```bash
pafish.exe
```
**L∆∞u √Ω:** Ch·∫°y t·ªáp th·ª±c thi `pafish.exe`. N√≥ s·∫Ω t·ª± ƒë·ªông th·ª±c hi·ªán c√°c ki·ªÉm tra v√† b√°o c√°o xem c√≥ ph√°t hi·ªán ra m√¥i tr∆∞·ªùng ph√¢n t√≠ch hay kh√¥ng. Blue Team c√≥ th·ªÉ s·ª≠ d·ª•ng c√¥ng c·ª• n√†y ƒë·ªÉ ki·ªÉm tra xem sandbox ho·∫∑c m√°y ph√¢n t√≠ch c·ªßa m√¨nh c√≥ b·ªã ph√°t hi·ªán b·ªüi c√°c k·ªπ thu·∫≠t **anti-analysis** ph·ªï bi·∫øn kh√¥ng, t·ª´ ƒë√≥ c·∫£i thi·ªán m√¥i tr∆∞·ªùng.

![image](https://user-images.githubusercontent.com/100603074/218870623-4c149ec7-2002-42ea-9c24-0d35f562bb8c.png)

*Image used from https://github.com/a0rtega/pafish*

### [üîô](#tool-list)[**lookyloo**](https://github.com/Lookyloo/lookyloo)

**Lookyloo** is a web interface that captures a webpage and then displays a tree of the domains, that call each other.
**L∆∞u √Ω:** Lookyloo l√† m·ªôt c√¥ng c·ª• ph√¢n t√≠ch h√†nh vi trang web (web page behavior analysis). N√≥ truy c·∫≠p m·ªôt URL, ghi l·∫°i qu√° tr√¨nh t·∫£i trang, c√°c k·∫øt n·ªëi ƒë·∫øn domain kh√°c, c√°c redirect, v√† v·∫Ω s∆° ƒë·ªì m·ªëi quan h·ªá gi·ªØa c√°c domain ƒë∆∞·ª£c t·∫£i.

Use **Lookyloo** to map the journey a website page takes - from entering the initial URL address to the various redirects to third-party affiliations.
**L∆∞u √Ω:** R·∫•t h·ªØu √≠ch cho Blue Team ƒë·ªÉ ph√¢n t√≠ch c√°c URL ƒë√°ng ng·ªù, email phishing ho·∫∑c c√°c trang web qu·∫£ng c√°o ƒë·ªôc h·∫°i (malvertising) ƒë·ªÉ hi·ªÉu lu·ªìng redirect, c√°c domain trung gian v√† domain ƒë√≠ch cu·ªëi c√πng, c≈©ng nh∆∞ c√°c t√†i nguy√™n kh√°c ƒë∆∞·ª£c t·∫£i v·ªÅ.

**Install:**

```bash
git clone https://github.com/Lookyloo/lookyloo.git
cd lookyloo
poetry install
echo LOOKYLOO_HOME="'`pwd`'" > .env
```
**L∆∞u √Ω:** T·∫£i m√£ ngu·ªìn v√† s·ª≠ d·ª•ng **poetry** (tr√¨nh qu·∫£n l√Ω dependency Python) ƒë·ªÉ c√†i ƒë·∫∑t. Thi·∫øt l·∫≠p bi·∫øn m√¥i tr∆∞·ªùng `LOOKYLOO_HOME`.

Full installation instructions can be found [t·∫°i ƒë√¢y](https://www.lookyloo.eu/docs/main/install-lookyloo.html).

**Usage:**

Once installed and running, **lookyloo** can be operated via the web interface hosted locally.
**L∆∞u √Ω:** Truy c·∫≠p giao di·ªán web sau khi server ƒë√£ ch·∫°y ƒë·ªÉ g·ª≠i c√°c URL c·∫ßn ph√¢n t√≠ch.

![image](https://user-images.githubusercontent.com/100603074/218870701-24d0b7c1-50d9-4b7d-9b9d-b76c98b4e10f.png)

*Image used from https://www.lookyloo.eu/*

### [üîô](#tool-list)[**YARA**](https://github.com/virustotal/yara)

**YARA** is a tool aimed at (but not limited to) helping **malware researchers** to identify and classify malware samples. With **YARA** you can create descriptions of malware families (or whatever you want to describe) based on textual or binary patterns.
**L∆∞u √Ω:** YARA l√† m·ªôt **c√¥ng c·ª•** khung (framework) ƒë·ªÉ t·∫°o c√°c lu·∫≠t d·ª±a tr√™n pattern ƒë·ªÉ t√¨m ki·∫øm c√°c file ho·∫∑c m·∫´u d·ªØ li·ªáu ph√π h·ª£p. C√∫ ph√°p lu·∫≠t YARA bao g·ªìm c√°c chu·ªói text ho·∫∑c binary v√† m·ªôt bi·ªÉu th·ª©c logic ƒë·ªÉ x√°c ƒë·ªãnh khi n√†o lu·∫≠t ƒë∆∞·ª£c coi l√† kh·ªõp.

Each description, a.k.a rule, consists of a set of strings and a boolean expression which determine its logic.
**L∆∞u √Ω:** C√°c nh√† ph√¢n t√≠ch malware v√† Blue Team s·ª≠ d·ª•ng lu·∫≠t YARA ƒë·ªÉ ph√°t hi·ªán c√°c bi·∫øn th·ªÉ malware m·ªõi, t√¨m ki·∫øm c√°c file ch·ª©a IoC ƒë√£ bi·∫øt, ho·∫∑c ph√¢n lo·∫°i c√°c m·∫´u ƒë·ªôc h·∫°i.

**Install:**

```bash
tar -zxf yara-4.2.0.tar.gz
cd yara-4.2.0
./bootstrap.sh
sudo apt-get install automake libtool make gcc pkg-config
git clone https://github.com/VirusTotal/yara
cd yara
./bootstrap.sh
./configure
make
sudo make install
```
**L∆∞u √Ω:** C√°c l·ªánh ƒë·ªÉ c√†i ƒë·∫∑t YARA t·ª´ m√£ ngu·ªìn. N√≥ y√™u c·∫ßu c√°c c√¥ng c·ª• build C v√† c√°c th∆∞ vi·ªán dependency (`automake`, `libtool`...). Khuy·∫øn kh√≠ch c√†i ƒë·∫∑t t·ª´ tr√¨nh qu·∫£n l√Ω g√≥i c·ªßa h·ªá ƒëi·ªÅu h√†nh (apt, yum, brew...) n·∫øu c√≥ s·∫µn.

Full installation instructions can be found [t·∫°i ƒë√¢y](https://yara.readthedocs.io/en/stable/gettingstarted.html#compiling-and-installing-yara).

**Usage:**

```bash
# Apply rule in /foo/bar/rules to all files in the current directory
yara /foo/bar/rules .

# Scan all files in the /foo directory and its subdirectories:
yara /foo/bar/rules -r /foo
```
**L∆∞u √Ω:** S·ª≠ d·ª•ng **command line utility yara**. `yara` c·∫ßn ƒë∆∞·ªùng d·∫´n ƒë·∫øn file lu·∫≠t YARA v√† ƒë∆∞·ªùng d·∫´n ƒë·∫øn file ho·∫∑c th∆∞ m·ª•c c·∫ßn qu√©t. `-r` b·∫≠t qu√©t ƒë·ªá quy. Output cho bi·∫øt nh·ªØng file n√†o kh·ªõp v·ªõi lu·∫≠t n√†o. Blue Team d√πng ƒë·ªÉ qu√©t file tr√™n endpoint, tr√™n server file ho·∫∑c trong sandbox ƒë·ªÉ ph√°t hi·ªán malware.

Nice **YARA** cheatsheet [t·∫°i ƒë√¢y](https://github.com/mattnotmax/DFIR-notes/blob/master/cheatsheet_yara.md).

![image](https://user-images.githubusercontent.com/100603074/218871209-da726de1-1563-40b4-857c-3234f7415fdb.png)

*Image used from https://virustotal.github.io/yara/*

### [üîô](#tool-list)[**Cuckoo Sandbox**](https://cuckoosandbox.org/)

**Cuckoo** is an open source automated **malware analysis system**.
**L∆∞u √Ω:** Cuckoo Sandbox l√† m·ªôt h·ªá th·ªëng sandbox t·ª± ƒë·ªông (sandbox automated analysis) ƒë·ªÉ ch·∫°y malware m·ªôt c√°ch an to√†n v√† quan s√°t h√†nh vi c·ªßa n√≥. R·∫•t h·ªØu √≠ch cho c√°c nh√† ph√¢n t√≠ch malware v√† Blue Team.

It‚Äôs used to automatically run and analyze files and collect comprehensive analysis results that outline what the malware does while running inside an isolated operating system.
**L∆∞u √Ω:** Sandbox t·∫°o m·ªôt m√¥i tr∆∞·ªùng an to√†n (m√°y ·∫£o ho·∫∑c container) ƒë·ªÉ cho ph√©p malware th·ª±c thi m√† kh√¥ng g√¢y h·∫°i cho h·ªá th·ªëng th·∫≠t.

It can retrieve the following type of results:

- Traces of calls performed by all processes spawned by the malware.
- Files being created, deleted and downloaded by the malware during its execution.
- Memory dumps of the malware processes.
- Network traffic trace in PCAP format.
- Screenshots taken during the execution of the malware.
- Full memory dumps of the machines.
**L∆∞u √Ω:** Cuckoo t·ª± ƒë·ªông thu th·∫≠p r·∫•t nhi·ªÅu lo·∫°i d·ªØ li·ªáu chi ti·∫øt v·ªÅ h√†nh vi c·ªßa malware: ho·∫°t ƒë·ªông c·ªßa ti·∫øn tr√¨nh, thay ƒë·ªïi file, k·∫øt n·ªëi m·∫°ng, snapshot b·ªô nh·ªõ... K·∫øt qu·∫£ n√†y gi√∫p nh√† ph√¢n t√≠ch hi·ªÉu s√¢u v·ªÅ ch·ª©c nƒÉng c·ªßa malware.

**Install:**

For installation follow the docs [t·∫°i ƒë√¢y](https://cuckoo.readthedocs.io/en/latest/installation/).

**Usage:**

For usage follow the docs [t·∫°i ƒë√¢y](https://cuckoo.readthedocs.io/en/latest/usage/).

### [üîô](#tool-list)[**radare2**](https://github.com/radareorg/radare2)

**Radare2** provides a set of libraries, tools and plugins to ease reverse engineering tasks.

**r2** is a featureful low-level command-line tool with support for scripting. **r2** can edit files on local hard drives, view kernel memory, and debug programs locally or via a remote gdb server. **r2**'s wide architecture support allows you to analyze, emulate, debug, modify, and disassemble any binary.
**L∆∞u √Ω:** Radare2 (r2) l√† m·ªôt framework d·ªãch ng∆∞·ª£c v√† ph√¢n t√≠ch binary m√£ ngu·ªìn m·ªü. N√≥ ho·∫°t ƒë·ªông ch·ªß y·∫øu th√¥ng qua giao di·ªán d√≤ng l·ªánh, r·∫•t linh ho·∫°t v√† c√≥ nhi·ªÅu ch·ª©c nƒÉng (d·ªãch ng∆∞·ª£c, debug, ph√¢n t√≠ch binary, gi·∫£ l·∫≠p...). L√† gi·∫£i ph√°p thay th·∫ø cho IDA ho·∫∑c Ghidra (ƒë·∫∑c bi·ªát l√† khi th√≠ch l√†m vi·ªác tr√™n command line).

**Install:**

```bash
git clone https://github.com/radareorg/radare2
radare2/sys/install.sh
```
**L∆∞u √Ω:** T·∫£i m√£ ngu·ªìn v√† ch·∫°y script c√†i ƒë·∫∑t.

**Usage:**

```bash
$ r2 /bin/ls   # m·ªü binary ·ªü ch·∫ø ƒë·ªô ch·ªâ ƒë·ªçc
> aaa          # gi·ªëng nh∆∞ r2 -A, ph√¢n t√≠ch binary
> afl          # li·ªát k√™ t·∫•t c·∫£ c√°c h√†m (th·ª≠ aflt, aflm)
> px 32        # in hexdump 32 byte c·ªßa kh·ªëi hi·ªán t·∫°i
> s sym.main   # di chuy·ªÉn ƒë·∫øn offset ƒë∆∞·ª£c cho (b·∫±ng t√™n flag, s·ªë, ..)
> f~foo        # l·ªçc flags v·ªõi ~grep (gi·ªëng nh∆∞ |grep)
> iS;is        # li·ªát k√™ c√°c section v√† symbols (gi·ªëng nh∆∞ rabin2 -Ss)
> pdf; agf     # in h√†m v√† hi·ªÉn th·ªã bi·ªÉu ƒë·ªì lu·ªìng ƒëi·ªÅu khi·ªÉn d·∫°ng ascii-art
> oo+;w hello  # m·ªü l·∫°i ·ªü ch·∫ø ƒë·ªô rw v√† ghi m·ªôt chu·ªói t·∫°i offset hi·ªán t·∫°i
> ?*~...       # b·ªô l·ªçc t∆∞∆°ng t√°c t·∫•t c·∫£ c√°c th√¥ng b√°o tr·ª£ gi√∫p l·ªánh
> q            # tho√°t
```
**L∆∞u √Ω:** ƒê√¢y l√† c√°c l·ªánh ph·ªï bi·∫øn trong console **r2**. **Blue Team** d√πng ƒë·ªÉ ph√¢n t√≠ch s√¢u m√£ binary, hi·ªÉu c·∫•u tr√∫c file, logic c·ªßa malware.

Great usage book [t·∫°i ƒë√¢y](https://book.rada.re/).

![image](https://user-images.githubusercontent.com/100603074/218871325-90800880-ee58-4a61-9372-fa9cb09f6bf3.png)

*Image used from https://github.com/radareorg/radare2*

### [üîô](#tool-list)[**dnSpy**](https://github.com/dnSpy/dnSpy)

**dnSpy** is a debugger and .NET assembly editor. You can use it to edit and debug assemblies.
**L∆∞u √Ω:** dnSpy l√† c√¥ng c·ª• chuy√™n bi·ªát ƒë·ªÉ l√†m vi·ªác v·ªõi c√°c binary/assembly c·ªßa .NET Framework v√† .NET Core.

Main features:

- Debug .NET and Unity assemblies
- Edit .NET and Unity assemblies
**L∆∞u √Ω:** Malware vi·∫øt b·∫±ng C# ho·∫∑c c√°c ng√¥n ng·ªØ .NET kh√°c r·∫•t ph·ªï bi·∫øn. **dnSpy** cho ph√©p Blue Team g·ª° l·ªói (debug) tr·ª±c ti·∫øp c√°c assembly .NET, d·ªãch ng∆∞·ª£c ch√∫ng th√†nh m√£ ngu·ªìn C# v√† th·∫≠m ch√≠ ch·ªânh s·ª≠a r·ªìi l∆∞u l·∫°i assembly ƒë√£ thay ƒë·ªïi. C·ª±c k·ª≥ quan tr·ªçng khi ph√¢n t√≠ch malware .NET.

**Install (Build):**

```bash
git clone --recursive https://github.com/dnSpy/dnSpy.git
cd dnSpy
./build.ps1 -NoMsbuild
```
**L∆∞u √Ω:** Clone m√£ ngu·ªìn (bao g·ªìm submodule) v√† ch·∫°y script PowerShell ƒë·ªÉ build.

**Usage:**

```bash
dnSpy.exe
```
**L∆∞u √Ω:** Ch·∫°y t·ªáp th·ª±c thi **dnSpy**. N√≥ c√≥ giao di·ªán ƒë·ªì h·ªça.

Nice tutorial page [t·∫°i ƒë√¢y](https://7d2dsdx.github.io/Tutorials/index.html?StartingdnSpy.html).

![image](https://user-images.githubusercontent.com/100603074/218871411-7eb20cb7-f2e8-4d29-98a9-d5820a138c8e.png)

*Image used from https://7d2dsdx.github.io/Tutorials/index.html?StartingdnSpy.html*

### [üîô](#tool-list)[**malware-traffic-analysis.net**](https://www.malware-traffic-analysis.net/)

This is a site with over 2,200 blog entries about malicious network traffic. Almost every post on the site has pcap files or malware samples (or both).
**L∆∞u √Ω:** ƒê√¢y l√† m·ªôt ngu·ªìn t√†i nguy√™n tr·ª±c tuy·∫øn ch·ª©a r·∫•t nhi·ªÅu b√†i vi·∫øt ph√¢n t√≠ch v·ªÅ l∆∞u l∆∞·ª£ng m·∫°ng li√™n quan ƒë·∫øn malware, ƒëi k√®m v·ªõi c√°c file PCAP (packet capture) v√† m·∫´u malware.

The site also contains a number of traffic analysis exercises, including technical blog posts outlining techniques being used by threat actors.
**L∆∞u √Ω:** Ngu·ªìn t√†i nguy√™n n√†y c·ª±c k·ª≥ h·ªØu √≠ch cho Blue Team v√† nh·ªØng ng∆∞·ªùi l√†m threat hunting ho·∫∑c network forensics ƒë·ªÉ luy·ªán t·∫≠p k·ªπ nƒÉng ph√¢n t√≠ch l∆∞u l∆∞·ª£ng m·∫°ng th·ª±c t·∫ø li√™n quan ƒë·∫øn c√°c lo·∫°i malware v√† TTP kh√°c nhau.

**Usage:**

Visit [https://www.malware-traffic-analysis.net/](https://www.malware-traffic-analysis.net/).

![image](https://user-images.githubusercontent.com/100603074/218871486-f782e3f1-fcea-4e68-a99b-235146490b84.png)

*Image used from https://www.malware-traffic-analysis.net/*

**Ph·ª•c h·ªìi D·ªØ li·ªáu**
====================

*C√°c c√¥ng c·ª• ƒë·ªÉ ph·ª•c h·ªìi d·ªØ li·ªáu t·ª´ h·ªá th·ªëng v√† thi·∫øt b·ªã b·ªã h·ªèng ho·∫∑c b·ªã l·ªói.*

### [üîô](#tool-list)[**Recuva**](https://www.ccleaner.com/recuva)

**Recuva** is a data recovery tool that can be used to recover deleted files from your computer.
**L∆∞u √Ω:** Recuva l√† c√¥ng c·ª• ph·ªï bi·∫øn v√† d·ªÖ s·ª≠ d·ª•ng ƒë·ªÉ ph·ª•c h·ªìi file ƒë√£ x√≥a (do v√¥ t√¨nh, ƒë·ªãnh d·∫°ng ho·∫∑c b·ªüi malware x√≥a).

It is often used to recover deleted files that may contain valuable information, such as deleted logs or documents that could be used to investigate a security incident.

**Recuva** can recover files from hard drives, USB drives, and memory cards, and it is available for Windows and Mac operating systems.
**L∆∞u √Ω:** Blue Team c√≥ th·ªÉ d√πng Recuva trong qu√° tr√¨nh ƒëi·ªÅu tra ƒë·ªÉ t√¨m ki·∫øm c√°c file b·∫±ng ch·ª©ng quan tr·ªçng c√≥ th·ªÉ ƒë√£ b·ªã x√≥a b·ªüi attacker ho·∫∑c do s·ª± c·ªë.

**Install:**

You can download the tool from [t·∫°i ƒë√¢y](https://www.ccleaner.com/recuva).

**Usage:**

Nice step by step [guide](https://toolbox.iskysoft.com/data-recovery-tips/recuva-windows-10.html).

![image](https://user-images.githubusercontent.com/100603074/210668891-58312f55-d4d0-4f77-9cd6-f716bbdb5b44.png)

*Image used from https://www.softpedia.com/blog/recuva-explained-usage-video-and-download-503681.shtml*

### [üîô](#tool-list)[**Extundelete**](https://extundelete.sourceforge.net/)

**Extundelete** is a utility that can be used to recover deleted files from an **ext3** or **ext4** file system.
**L∆∞u √Ω:** Ext3/Ext4 l√† c√°c ƒë·ªãnh d·∫°ng file system ph·ªï bi·∫øn tr√™n Linux. **Extundelete** chuy√™n bi·ªát cho vi·ªác ph·ª•c h·ªìi file ƒë√£ x√≥a tr√™n c√°c ph√¢n v√πng Linux s·ª≠ d·ª•ng c√°c ƒë·ªãnh d·∫°ng n√†y.

It works by searching the file system for blocks of data that used to belong to a file, and then attempting to recreate the file using those blocks of data. It is often used to recover important files that have been accidentally or maliciously deleted.

**Install:**

You can download the tool from [t·∫°i ƒë√¢y](https://sourceforge.net/project/platformdownload.php?group_id=260221).

**Usage:**

```bash
# In th√¥ng tin v·ªÅ filesystem t·ª´ superblock.
--superblock

# C·ªë g·∫Øng kh√¥i ph·ª•c t·ªáp ƒë√£ b·ªã x√≥a t·∫°i ƒë∆∞·ªùng d·∫´n ƒë∆∞·ª£c cho, g·ªçi l√† "--restore-file dirname/filename".
--restore-file path/to/deleted/file

# Kh√¥i ph·ª•c t·∫•t c·∫£ c√°c t·ªáp c√≥ th·ªÉ ph·ª•c h·ªìi ƒë·∫øn t√™n c·ªßa ch√∫ng tr∆∞·ªõc khi x√≥a, n·∫øu c√≥ th·ªÉ. C√°c t·ªáp kh√°c ƒë∆∞·ª£c kh√¥i ph·ª•c th√†nh t√™n nh∆∞ "file.NNNN".
--restore-all
```
**L∆∞u √Ω:** **Extundelete** l√† c√¥ng c·ª• d√≤ng l·ªánh ch·∫°y tr√™n Linux. N√≥ truy c·∫≠p tr·ª±c ti·∫øp v√†o c·∫•u tr√∫c c·ªßa file system (th∆∞·ªùng y√™u c·∫ßu mount read-only ho·∫∑c unmount ph√¢n v√πng c·∫ßn ph·ª•c h·ªìi ƒë·ªÉ tr√°nh ghi ƒë√®). C√∫ ph√°p `--restore-file` v√† `--restore-all` l√† c√°c ch·∫ø ƒë·ªô ph·ª•c h·ªìi ph·ªï bi·∫øn.

Full usage information can be found [t·∫°i ƒë√¢y](https://extundelete.sourceforge.net/options.html).

![image](https://user-images.githubusercontent.com/100603074/210669234-0d2d4920-7856-4731-b81c-3d7132f752ad.png)

*Image used from https://theevilbit.blogspot.com/2013/01/backtrack-forensics-ext34-file-recovery.html*

### [üîô](#tool-list)[**TestDisk**](https://www.cgsecurity.org/wiki/TestDisk_Download)

**TestDisk** is a free and open-source data recovery software tool that is designed to help recover lost partitions and make non-booting disks bootable again. It is useful for both **computer forensics and data recovery**.

It can be used to recover data that has been lost due to a variety of reasons, such as accidental deletion, formatting, or corruption of the partition table.

**TestDisk** can also be used to repair damaged boot sectors, recover deleted partitions, and recover lost files. It supports a wide range of file systems, including **FAT, NTFS**, and **ext2/3/4**, and can be used to recover data from disks that are damaged or formatted with a different file system than the one they were originally created with.
**L∆∞u √Ω:** **TestDisk** m·∫°nh m·∫Ω trong vi·ªác s·ª≠a ch·ªØa c·∫•u tr√∫c ·ªï ƒëƒ©a v√† ph·ª•c h·ªìi c√°c ph√¢n v√πng b·ªã m·∫•t ho·∫∑c b·ªã h·ªèng. N√≥ h·ªó tr·ª£ nhi·ªÅu ƒë·ªãnh d·∫°ng file system v√† l√† c√¥ng c·ª• h·ªØu √≠ch khi h·ªá th·ªëng kh√¥ng kh·ªüi ƒë·ªông ƒë∆∞·ª£c ho·∫∑c c√°c ph√¢n v√πng kh√¥ng th·ªÉ truy c·∫≠p b√¨nh th∆∞·ªùng. PhotoRec (th∆∞·ªùng ƒëi k√®m TestDisk) t·∫≠p trung v√†o ph·ª•c h·ªìi file b·ªã x√≥a b·∫•t k·ªÉ c·∫•u tr√∫c file system.

**Install:**

You can download the tool from [t·∫°i ƒë√¢y](https://www.cgsecurity.org/wiki/TestDisk_Download).

**Usage:**

Full usage examples [t·∫°i ƒë√¢y](https://www.cgsecurity.org/wiki/Data_Recovery_Examples).

[H∆∞·ªõng d·∫´n t·ª´ng b∆∞·ªõc TestDisk](https://www.cgsecurity.org/wiki/TestDisk_Step_By_Step)

[T√†i li·ªáu TestDisk PDF - 60 Trang](https://www.cgsecurity.org/testdisk.pdf)

![image](https://user-images.githubusercontent.com/100603074/210668956-4ed75998-bd6d-48cf-a2e7-dfa75656eece.png)

*Image used from https://www.cgsecurity.org/wiki/*

**Ph√°p y K·ªπ thu·∫≠t s·ªë**
====================

*C√°c c√¥ng c·ª• ƒë·ªÉ ti·∫øn h√†nh ƒëi·ªÅu tra ph√°p y tr√™n c√°c thi·∫øt b·ªã v√† h·ªá th·ªëng k·ªπ thu·∫≠t s·ªë, bao g·ªìm c√°c c√¥ng c·ª• ƒë·ªÉ thu th·∫≠p v√† ph√¢n t√≠ch b·∫±ng ch·ª©ng.*

### [üîô](#tool-list)[**SANS SIFT**](https://www.sans.org/tools/sift-workstation/)

**SANS SIFT (SANS Investigative Forensic Toolkit)** is a powerful **toolkit** for **forensic analysis** and **incident response**.
**L∆∞u √Ω:** SIFT l√† m·ªôt b·∫£n ph√¢n ph·ªëi Linux (d∆∞·ªõi d·∫°ng m√°y ·∫£o ho·∫∑c c√†i ƒë·∫∑t tr√™n Ubuntu/Debian) ƒë∆∞·ª£c c√†i s·∫µn r·∫•t nhi·ªÅu c√¥ng c·ª• ph√°p y k·ªπ thu·∫≠t s·ªë (DFIR) m√£ ngu·ªìn m·ªü v√† m·ªôt s·ªë c√¥ng c·ª• kh√°c. R·∫•t ti·ªán l·ª£i cho c√°c nh√† ƒëi·ªÅu tra ph√°p y v√† Blue Team.

It is a collection of open source and commercial tools that can be used to perform **forensic analysis** on a wide range of systems, including Windows, Linux, and Mac OS X. The **SANS SIFT** kit is designed to be run on a **forensic workstation**, which is a specialized computer that is used to perform forensic analysis on digital evidence.

The **SANS SIFT** kit is particularly useful for blue teamers, as it provides a wide range of tools and resources that can be used to investigate incidents, respond to threats, and perform **forensic analysis** on compromised systems.
**L∆∞u √Ω:** Blue Team d√πng SIFT workstation ƒë·ªÉ ph√¢n t√≠ch ·∫£nh ƒëƒ©a (disk image) c·ªßa c√°c m√°y b·ªã s·ª± c·ªë m√† kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn b·∫±ng ch·ª©ng g·ªëc.

**Install:**

1. Visit [https://www.sans.org/tools/sift-workstation/](https://www.sans.org/tools/sift-workstation/).

2. Click the '**Login to Download**' button and input (or create) your SANS Portal account credentials to download the **virtual machine**.

3. Once you have booted the **virtual machine**, use the credentials below to gain access.

```
Login = sansforensics
Password = forensics
```
**L∆∞u √Ω:** H∆∞·ªõng d·∫´n t·∫£i v√† truy c·∫≠p m√°y ·∫£o SIFT.

**Note:** *Use to elevate privileges to root while mounting disk images.*
**L∆∞u √Ω:** C·∫ßn d√πng t√†i kho·∫£n m·∫∑c ƒë·ªãnh v√† `sudo` ho·∫∑c `su` ƒë·ªÉ c√≥ quy·ªÅn root cho c√°c t√°c v·ª• DFIR c·∫•p th·∫•p nh∆∞ mount ·∫£nh ƒëƒ©a.

Additional install options [t·∫°i ƒë√¢y](https://www.sans.org/tools/sift-workstation/).

**Usage:**

```bash
# Registry Parsing - Regripper
rip.pl -r <HIVEFILE> -f <HIVETYPE>

# Recover deleted registry keys
deleted.pl <HIVEFILE>

# Mount E01 Images
ewfmount image.E01 mountpoint
mount -o

# Stream Extraction
bulk_extractor <options> -o output_dir
```
**L∆∞u √Ω:** C√°c v√≠ d·ª• s·ª≠ d·ª•ng m·ªôt s·ªë c√¥ng c·ª• c√≥ s·∫µn trong SIFT:
`rip.pl` (Regripper) l√† c√¥ng c·ª• ph√¢n t√≠ch file registry hive c·ªßa Windows.
`deleted.pl` ph·ª•c h·ªìi c√°c kh√≥a registry b·ªã x√≥a.
`ewfmount` d√πng ƒë·ªÉ mount ·∫£nh ƒëƒ©a ph√°p y ƒë·ªãnh d·∫°ng E01 (Expert Witness Format).
`bulk_extractor` l√† c√¥ng c·ª• qu√©t nhanh c√°c file tr√™n ·ªï ƒëƒ©a ho·∫∑c ·∫£nh ƒëƒ©a ƒë·ªÉ t√¨m c√°c lo·∫°i th√¥ng tin c·ª• th·ªÉ (email address, URL, chu·ªói k√Ω t·ª±...).

Full usage guide [t·∫°i ƒë√¢y](https://www.sans.org/posters/sift-cheat-sheet/).

![image](https://user-images.githubusercontent.com/100603074/210668984-bdec731b-ce80-4c3b-9696-9431dd77f9b0.png)

*Image used from https://securityboulevard.com/2020/08/how-to-install-sift-workstation-and-remnux-on-the-same-system-for-forensics-and-malware-analysis/*

### [üîô](#tool-list)[**The Sleuth Kit**](https://sleuthkit.org/sleuthkit/)

**The Sleuth Kit** is a collection of command line tools that can be used to analyze disk images and recover files from them.
**L∆∞u √Ω:** ƒê√¢y l√† m·ªôt b·ªô c√¥ng c·ª• d√≤ng l·ªánh n·ªÅn t·∫£ng cho ph√°p y k·ªπ thu·∫≠t s·ªë tr√™n nhi·ªÅu h·ªá ƒëi·ªÅu h√†nh. C√°c c√¥ng c·ª• nh∆∞ `fsstat`, `ils`, `blkcat`, `icat` cho ph√©p ph√¢n t√≠ch c·∫•u tr√∫c file system, li·ªát k√™ file, ƒë·ªçc n·ªôi dung inode,...

It is primarily used by **forensic investigators** to examine digital evidence after a computer has been seized or an image of a disk has been made. It can be useful because it can help understand what happened during a security incident and identify any malicious activity.

The tools in **The Sleuth Kit** can be used to extract deleted files, analyze disk partition structures, and examine the file system for evidence of tampering or unusual activity.
**L∆∞u √Ω:** C√°c c√¥ng c·ª• trong Sleuth Kit cho ph√©p ph·ª•c h·ªìi d·ªØ li·ªáu, ph√¢n t√≠ch c√°c partition, hi·ªÉu c√°ch file ƒë∆∞·ª£c l∆∞u tr·ªØ tr√™n ƒëƒ©a v√† t√¨m d·∫•u v·∫øt attacker.

**Install:**

Download tool from [t·∫°i ƒë√¢y](https://sleuthkit.org/sleuthkit/download.php).

**Usage:**

Link to [documentation](https://sleuthkit.org/sleuthkit/docs.php).

![image](https://user-images.githubusercontent.com/100603074/210669006-6dfab59d-b50e-49db-b390-b9ef27cab6fe.png)

*Image used from http://www.effecthacking.com/2016/09/the-sleuth-kit-digital-forensic-tool.html*

### [üîô](#tool-list)[**Autopsy**](https://www.autopsy.com/)

**Autopsy** is a **digital forensics platform** and graphical interface to **The Sleuth Kit** and other digital forensics tools.
**L∆∞u √Ω:** Autopsy cung c·∫•p m·ªôt giao di·ªán ng∆∞·ªùi d√πng ƒë·ªì h·ªça (GUI) cho The Sleuth Kit v√† nhi·ªÅu c√¥ng c·ª• ph√°p y kh√°c, l√†m cho qu√° tr√¨nh ƒëi·ªÅu tra d·ªÖ ti·∫øp c·∫≠n h∆°n cho nh·ªØng ng∆∞·ªùi kh√¥ng quen thu·ªôc v·ªõi d√≤ng l·ªánh.

It is used by law enforcement, military, and corporate examiners to investigate what happened on a computer. You can use it to analyze disk images and recover files, as well as to identify system and user activity.

**Autopsy** is used by "**blue teams**" (the cybersecurity professionals who defend organizations against attacks) to conduct forensic analysis and **incident response**. It can help **blue teams** understand the nature and scope of an attack, and identify any malicious activity that may have occurred on a computer or network.
**L∆∞u √Ω:** Blue Team d√πng Autopsy ƒë·ªÉ ph√¢n t√≠ch c√°c ·∫£nh ƒëƒ©a t·ª´ m√°y t√≠nh b·ªã s·ª± c·ªë (compromised endpoints), t√¨m ki·∫øm b·∫±ng ch·ª©ng v·ªÅ h√†nh vi c·ªßa attacker: file ƒë∆∞·ª£c t·∫°o/s·ª≠a/x√≥a, activity registry, log s·ª± ki·ªán, network connection, artifact tr√¨nh duy·ªát...

**Install:**

Download the tool from [t·∫°i ƒë√¢y](https://www.autopsy.com/download/).

**Usage:**

[H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng Autopsy](http://sleuthkit.org/autopsy/docs/user-docs/4.19.3//)

[SANS - Gi·ªõi thi·ªáu s·ª≠ d·ª•ng Tr√¨nh duy·ªát Ph√°p y AUTOPSY](https://www.sans.org/blog/a-step-by-step-introduction-to-using-the-autopsy-forensic-browser/)

![image](https://user-images.githubusercontent.com/100603074/210669037-449e7790-85c8-4b8c-97b9-2b46a1ea6e61.png)

*Image used from https://www.kitploit.com/2014/01/autopsy-digital-investigation-analysis.html*

**ƒê√†o t·∫°o Nh·∫≠n th·ª©c An ninh**
====================

*C√°c c√¥ng c·ª• ƒë·ªÉ ƒë√†o t·∫°o nh√¢n vi√™n v√† ng∆∞·ªùi d√πng kh√°c v·ªÅ c√°ch nh·∫≠n d·∫°ng v√† ngƒÉn ch·∫∑n c√°c m·ªëi ƒëe d·ªça b·∫£o m·∫≠t ti·ªÅm ·∫©n.*

### [üîô](#tool-list)[**TryHackMe**](https://tryhackme.com/dashboard)

**TryHackMe** is a platform that offers a variety of virtual machines, known as "rooms," which are designed to teach cybersecurity concepts and skills through hands-on learning.
**L∆∞u √Ω:** TryHackMe cung c·∫•p c√°c b√†i lab th·ª±c h√†nh v·ªÅ an ninh m·∫°ng, bao g·ªìm c·∫£ c√°c ph√≤ng (room) t·∫≠p trung v√†o k·ªπ nƒÉng Blue Team v√† Incident Response.

These rooms are interactive and gamified, allowing users to learn about topics such as web vulnerabilities, network security, and cryptography by solving challenges and completing tasks.

The platform is often used for security awareness training, as it provides a safe and controlled environment for users to practice their skills and learn about different types of cyber threats and how to defend against them.
**L∆∞u √Ω:** L√† ngu·ªìn tuy·ªát v·ªùi ƒë·ªÉ ƒë√†o t·∫°o th√†nh vi√™n Blue Team v√† n√¢ng cao nh·∫≠n th·ª©c cho nh√¢n vi√™n b·∫±ng c√°ch cho h·ªç tr·∫£i nghi·ªám (trong m√¥i tr∆∞·ªùng an to√†n) c√°c lo·∫°i t·∫•n c√¥ng v√† c√°ch ph√°t hi·ªán/ph√≤ng v·ªá.

Visit [https://tryhackme.com/](https://tryhackme.com/) and create an account.

[**TryHackMe** - H∆∞·ªõng d·∫´n B·∫Øt ƒë·∫ßu](https://docs.tryhackme.com/docs/teaching/teaching-getting-started/)

**Useful links:**

[ƒê∆∞·ªùng d·∫´n H·ªçc t·∫≠p Ti·ªÅn-An ninh](https://tryhackme.com/path-action/presecurity/join)

[Gi·ªõi thi·ªáu v·ªÅ ƒê∆∞·ªùng d·∫´n H·ªçc t·∫≠p An ninh m·∫°ng](https://tryhackme.com/path-action/introtocyber/join)

Visit the [hacktivities](https://tryhackme.com/hacktivities) tab for a full list of available rooms and modules.

![image](https://user-images.githubusercontent.com/100603074/210669062-dba079b7-a677-4b7a-ac99-6892ba894ac8.png)

*Image used from https://www.hostingadvice.com/blog/learn-cybersecurity-with-tryhackme/*

### [üîô](#tool-list)[**HackTheBox**](https://www.hackthebox.com/)

**HackTheBox** is a platform for practicing and improving your hacking skills.
**L∆∞u √Ω:** HackTheBox ch·ªß y·∫øu t·∫≠p trung v√†o c√°c b√†i lab t·∫•n c√¥ng (offensive security/penetration testing), nh∆∞ng vi·ªác hi·ªÉu c√°ch th·ª©c attacker ho·∫°t ƒë·ªông l√† r·∫•t quan tr·ªçng ƒë·ªëi v·ªõi Blue Team.

It consists of a set of challenges that simulate real-world scenarios and require you to use your knowledge of various hacking techniques to solve them. These challenges are designed to test your knowledge of topics such as network security, cryptography, web security, and more.

**HackTheBox** is often used by security professionals as a way to practice and improve their skills, and it can also be a useful resource for security awareness training. By working through the challenges and learning how to solve them, individuals can gain a better understanding of how to identify and mitigate common security threats.
**L∆∞u √Ω:** M·∫∑c d√π t·∫≠p trung t·∫•n c√¥ng, vi·ªác luy·ªán t·∫≠p tr√™n HTB gi√∫p Blue Team "nghƒ© nh∆∞ attacker", t·ª´ ƒë√≥ hi·ªÉu c√°c l·ªó h·ªïng, TTPs, v√† c√°ch c·ªßng c·ªë ph√≤ng th·ªß t·ªët h∆°n.

Visit [https://app.hackthebox.com/login](https://app.hackthebox.com/login) and create an account.

**Useful links:**

[Blog - Gi·ªõi thi·ªáu v·ªÅ Hack The Box](https://help.hackthebox.com/en/articles/5185158-introduction-to-hack-the-box)

[Blog - H·ªçc Hack v·ªõi Hack The Box: Kinh th√°nh cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu](https://www.hackthebox.com/blog/learn-to-hack-beginners-bible)

[Blog - Gi·ªõi thi·ªáu v·ªÅ Starting Point](https://help.hackthebox.com/en/articles/6007919-introduction-to-starting-point)

![image](https://user-images.githubusercontent.com/100603074/210669087-d00d76d1-300f-48c9-8f7f-4b9b5157626e.png)

*Image used from https://www.hackthebox.com/login*

### [üîô](#tool-list)[**CyberDefenders**](https://cyberdefenders.org/)

**CyberDefenders** is a dedicated platform designed for **blue team professionals** to enhance their **cyber security skills**.
**L∆∞u √Ω:** N·ªÅn t·∫£ng n√†y t·∫≠p trung chuy√™n bi·ªát v√†o c√°c k·ªπ nƒÉng ph√≤ng th·ªß cho Blue Team.

The platform provides real-world **blue team labs** that cover a broad range of disciplines. Participants are encouraged to apply their knowledge in areas such as **incident response, digital forensics, and threat hunting** to navigate through these scenarios.

The goal is to offer a practical learning environment that mirrors the complexities that defenders encounter in Security Operations Centers.
**L∆∞u √Ω:** Cung c·∫•p c√°c b√†i lab th·ª±c h√†nh gi·∫£ l·∫≠p c√°c t√¨nh hu·ªëng th·ª±c t·∫ø li√™n quan ƒë·∫øn ·ª©ng ph√≥ s·ª± c·ªë, ph√°p y, v√† threat hunting.

Visit [https://cyberdefenders.org/](https://cyberdefenders.org/) and create an account.

**Useful links:**

[C√°c B√†i Lab Blue Team](https://cyberdefenders.org/blue-team-labs/)

[Ch·ª©ng nh·∫≠n Certified CyberDefender](https://cyberdefenders.org/blue-team-training/courses/certified-cyberdefender-certification/)

![image](https://github.com/ahmedkhalidali/BlueTeam-Tools/assets/30199198/fe2ef3c9-d8a9-4a82-91c8-d93487df3afb)

### [üîô](#tool-list)[**PhishMe**](https://cofense.com/product-services/phishme/)

**PhishMe** is a company that provides **security awareness training** to help organizations educate their employees about how to identify and prevent phishing attacks.
**L∆∞u √Ω:** PhishMe (hi·ªán l√† Cofense) l√† m·ªôt gi·∫£i ph√°p th∆∞∆°ng m·∫°i cung c·∫•p c√°c ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o v√† m√¥ ph·ªèng t·∫•n c√¥ng phishing cho ng∆∞·ªùi d√πng cu·ªëi.

**PhishMe's** training programs aim to teach employees how to recognize and report phishing attempts, as well as how to protect their personal and professional accounts from these types of attacks.

The company's training programs can be customized to fit the needs of different organizations and can be delivered through a variety of mediums, including online courses, in-person training, and simulations.
**L∆∞u √Ω:** Vi·ªác ƒë√†o t·∫°o ng∆∞·ªùi d√πng cu·ªëi (end-user training) l√† m·ªôt bi·ªán ph√°p ph√≤ng v·ªá quan tr·ªçng c·ªßa Blue Team ƒë·ªÉ gi·∫£m r·ªßi ro t·∫•n c√¥ng th√¥ng qua y·∫øu t·ªë con ng∆∞·ªùi.

Request a demo from [t·∫°i ƒë√¢y](https://go.cofense.com/live-demo/).

**Useful links:**

[Blog Cofense](https://cofense.com/blog/)

[Trung t√¢m Ki·∫øn th·ª©c Cofense](https://cofense.com/knowledge-center-hub/)

![image](https://user-images.githubusercontent.com/100603074/210669120-1b29007a-f7f6-40f6-922b-9b5b251f6447.png)

*Image used from https://cofense.com/product-services/phishme/*

**Giao ti·∫øp v√† C·ªông t√°c**
====================

C√¥ng c·ª• ƒë·ªÉ ph·ªëi h·ª£p v√† giao ti·∫øp v·ªõi c√°c th√†nh vi√™n trong nh√≥m trong su·ªët s·ª± c·ªë, bao g·ªìm chat, email v√† ph·∫ßn m·ªÅm qu·∫£n l√Ω d·ª± √°n.

### [üîô](#tool-list)[**Twitter**](https://twitter.com/)

**Twitter** is a great platform for sharing information about cyber security.
**L∆∞u √Ω:** Twitter l√† m·ªôt ngu·ªìn th√¥ng tin m·ªü (OSINT) r·∫•t phong ph√∫ v√† c·∫≠p nh·∫≠t v·ªÅ c√°c m·ªëi ƒëe d·ªça b·∫£o m·∫≠t, IoC m·ªõi, ph√¢n t√≠ch malware v√† c√°c TTP m·ªõi n·ªïi.

It's a platform that is widely used by security professionals, researchers, and experts, giving you access to an endless amount of new information.

Some great accounts to follow:

- [@vxunderground](https://twitter.com/vxunderground)
- [@Alh4zr3d](https://twitter.com/Alh4zr3d)
- [@3xp0rtblog](https://twitter.com/3xp0rtblog)
- [@C5pider](https://twitter.com/C5pider)
- [@_JohnHammond](https://twitter.com/_JohnHammond)
- [@mrd0x](https://twitter.com/mrd0x)
- [@TheHackersNews](https://twitter.com/TheHackersNews)
- [@pancak3lullz](https://twitter.com/pancak3lullz)
- [@GossiTheDog](https://twitter.com/GossiTheDog)
- [@briankrebs](https://twitter.com/briankrebs)
- [@SwiftOnSecurity](https://twitter.com/SwiftOnSecurity)
- [@schneierblog](https://twitter.com/schneierblog)
- [@mikko](https://twitter.com/mikko)
- [@campuscodi](https://twitter.com/campuscodi)
**L∆∞u √Ω:** Danh s√°ch c√°c t√†i kho·∫£n Twitter c√≥ ·∫£nh h∆∞·ªüng ho·∫∑c chia s·∫ª nhi·ªÅu n·ªôi dung li√™n quan ƒë·∫øn an ninh m·∫°ng, r·∫•t ƒë√°ng ƒë·ªÉ Blue Team theo d√µi ƒë·ªÉ c·∫≠p nh·∫≠t tin t·ª©c v√† k·ªπ thu·∫≠t m·ªõi.

### [üîô](#tool-list)[**Facebook ThreatExchange**](https://developers.facebook.com/docs/threat-exchange/getting-started)

**Facebook ThreatExchange** is a platform for security professionals to share and analyze information about cyber threats.
**L∆∞u √Ω:** ƒê√¢y l√† m·ªôt n·ªÅn t·∫£ng chia s·∫ª IoC ri√™ng t∆∞ (d√†nh cho c√°c th√†nh vi√™n ƒë√£ ƒë∆∞·ª£c ph√™ duy·ªát), cho ph√©p c√°c t·ªï ch·ª©c chia s·∫ª c√°c ch·ªâ b√°o v·ªÅ m·ªëi ƒëe d·ªça m√† h·ªç ph√°t hi·ªán v·ªõi c√°c th√†nh vi√™n kh√°c ƒë·ªÉ n√¢ng cao nh·∫≠n th·ª©c chung v√† kh·∫£ nƒÉng ph√≤ng th·ªß c·ªßa c·ªông ƒë·ªìng.

It was designed to help organizations better defend against threats by allowing them to share threat intelligence with each other in a private and secure way.

It is intended to be used by "**blue teams**", who are responsible for the security of an organization and work to prevent, detect, and respond to cyber threats.
**L∆∞u √Ω:** L√† m·ªôt k√™nh ƒë·ªÉ Blue Team nh·∫≠p IoC ph√°t hi·ªán trong qu√° tr√¨nh ƒëi·ªÅu tra v√† nh·∫≠n IoC t·ª´ c√°c t·ªï ch·ª©c kh√°c, h·ªó tr·ª£ c√°c ho·∫°t ƒë·ªông threat hunting v√† c·∫≠p nh·∫≠t bi·ªán ph√°p ph√≤ng th·ªß.

**Usage:**

To request access to **ThreatExchange**, you have to submit an application via [https://developers.facebook.com/products/threat-exchange/](https://developers.facebook.com/products/threat-exchange/).
**L∆∞u √Ω:** C·∫ßn ƒëƒÉng k√Ω v√† ƒë∆∞·ª£c Facebook ph√™ duy·ªát ƒë·ªÉ tham gia n·ªÅn t·∫£ng.

**Useful links:**

[Ch√†o m·ª´ng ƒë·∫øn v·ªõi ThreatExchange!](https://developers.facebook.com/docs/threat-exchange/getting-started)

[T·ªïng quan giao di·ªán ThreatExchange](https://developers.facebook.com/docs/threat-exchange/ui)

[Tham kh·∫£o API ThreatExchange](https://developers.facebook.com/docs/threat-exchange/reference/apis)

[GitHub - ThreatExchange](https://github.com/facebook/ThreatExchange/tree/main/python-threatexchange)
**L∆∞u √Ω:** ThreatExchange cung c·∫•p API ƒë·ªÉ t·ª± ƒë·ªông h√≥a vi·ªác nh·∫≠p/xu·∫•t/t√¨m ki·∫øm IoC, cho ph√©p t√≠ch h·ª£p v·ªõi c√°c c√¥ng c·ª• ho·∫∑c platform TI n·ªôi b·ªô c·ªßa t·ªï ch·ª©c.
